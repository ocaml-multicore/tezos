tezt/_regressions/rpc/hangzhou.proxy.mempool.out

curl -s 'http://localhost:[PORT]/chains/main/mempool/monitor_operations?applied=true&outdated=true&branch_delayed=true&refused=true&branch_refused=true'
[]
[{"hash":"[OPERATION_HASH]","protocol":"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx","branch":"[BRANCH_HASH]","contents":[{"kind":"transaction","source":"[PUBLIC_KEY_HASH]","fee":"1000","counter":"1","gas_limit":"1040","storage_limit":"257","amount":"1000000","destination":"[PUBLIC_KEY_HASH]"}],"signature":"[SIGNATURE]","error":[{"kind":"branch","id":"proto.011-PtHangz2.contract.counter_in_the_past","contract":"[PUBLIC_KEY_HASH]","expected":"2","found":"1"}]}]
[{"hash":"[OPERATION_HASH]","protocol":"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx","branch":"[BRANCH_HASH]","contents":[{"kind":"transaction","source":"[PUBLIC_KEY_HASH]","fee":"1000","counter":"5","gas_limit":"1040","storage_limit":"257","amount":"1000000","destination":"[PUBLIC_KEY_HASH]"}],"signature":"[SIGNATURE]","error":[{"kind":"temporary","id":"proto.011-PtHangz2.contract.counter_in_the_future","contract":"[PUBLIC_KEY_HASH]","expected":"1","found":"5"}]}]
[{"hash":"[OPERATION_HASH]","protocol":"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx","branch":"[BRANCH_HASH]","contents":[{"kind":"transaction","source":"[PUBLIC_KEY_HASH]","fee":"0","counter":"1","gas_limit":"1040","storage_limit":"257","amount":"1000000","destination":"[PUBLIC_KEY_HASH]"}],"signature":"[SIGNATURE]"}]
[{"hash":"[OPERATION_HASH]","protocol":"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx","branch":"[BRANCH_HASH]","contents":[{"kind":"transaction","source":"[PUBLIC_KEY_HASH]","fee":"1000","counter":"1","gas_limit":"1040","storage_limit":"257","amount":"1000000","destination":"[PUBLIC_KEY_HASH]"}],"signature":"[SIGNATURE]"}]

./tezos-client --mode proxy rpc get /chains/main/mempool/pending_operations
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "applied":
    [ { "hash": "[OPERATION_HASH]",
        "branch": "[BRANCH_HASH]",
        "contents":
          [ { "kind": "transaction",
              "source": "[PUBLIC_KEY_HASH]",
              "fee": "1000", "counter": "1", "gas_limit": "1040",
              "storage_limit": "257", "amount": "1000000",
              "destination": "[PUBLIC_KEY_HASH]" } ],
        "signature":
          "[SIGNATURE]" } ],
  "refused":
    [ [ "[OPERATION_HASH]",
        { "protocol": "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx",
          "branch": "[BRANCH_HASH]",
          "contents":
            [ { "kind": "transaction",
                "source": "[PUBLIC_KEY_HASH]", "fee": "0",
                "counter": "1", "gas_limit": "1040", "storage_limit": "257",
                "amount": "1000000",
                "destination": "[PUBLIC_KEY_HASH]" } ],
          "signature":
            "[SIGNATURE]",
          "error":
            [ { "kind": "permanent",
                "id": "proto.011-PtHangz2.prefilter.fees_too_low" } ] } ] ],
  "outdated": [],
  "branch_refused":
    [ [ "[OPERATION_HASH]",
        { "protocol": "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx",
          "branch": "[BRANCH_HASH]",
          "contents":
            [ { "kind": "transaction",
                "source": "[PUBLIC_KEY_HASH]",
                "fee": "1000", "counter": "1", "gas_limit": "1040",
                "storage_limit": "257", "amount": "1000000",
                "destination": "[PUBLIC_KEY_HASH]" } ],
          "signature":
            "[SIGNATURE]",
          "error":
            [ { "kind": "branch",
                "id": "proto.011-PtHangz2.contract.counter_in_the_past",
                "contract": "[PUBLIC_KEY_HASH]",
                "expected": "2", "found": "1" } ] } ] ],
  "branch_delayed":
    [ [ "[OPERATION_HASH]",
        { "protocol": "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx",
          "branch": "[BRANCH_HASH]",
          "contents":
            [ { "kind": "transaction",
                "source": "[PUBLIC_KEY_HASH]",
                "fee": "1000", "counter": "5", "gas_limit": "1040",
                "storage_limit": "257", "amount": "1000000",
                "destination": "[PUBLIC_KEY_HASH]" } ],
          "signature":
            "[SIGNATURE]",
          "error":
            [ { "kind": "temporary",
                "id": "proto.011-PtHangz2.contract.counter_in_the_future",
                "contract": "[PUBLIC_KEY_HASH]",
                "expected": "1", "found": "5" } ] } ] ], "unprocessed": [] }

curl -s 'http://localhost:[PORT]/chains/main/mempool/monitor_operations?applied=true&outdated=true&branch_delayed=true&refused=true&branch_refused=true'
[{"hash":"[OPERATION_HASH]","protocol":"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx","branch":"[BRANCH_HASH]","contents":[{"kind":"transaction","source":"[PUBLIC_KEY_HASH]","fee":"1000","counter":"1","gas_limit":"1040","storage_limit":"257","amount":"1000000","destination":"[PUBLIC_KEY_HASH]"}],"signature":"[SIGNATURE]"},{"hash":"[OPERATION_HASH]","protocol":"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx","branch":"[BRANCH_HASH]","contents":[{"kind":"transaction","source":"[PUBLIC_KEY_HASH]","fee":"0","counter":"1","gas_limit":"1040","storage_limit":"257","amount":"1000000","destination":"[PUBLIC_KEY_HASH]"}],"signature":"[SIGNATURE]","error":[{"kind":"permanent","id":"proto.011-PtHangz2.prefilter.fees_too_low"}]},{"hash":"[OPERATION_HASH]","protocol":"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx","branch":"[BRANCH_HASH]","contents":[{"kind":"transaction","source":"[PUBLIC_KEY_HASH]","fee":"1000","counter":"1","gas_limit":"1040","storage_limit":"257","amount":"1000000","destination":"[PUBLIC_KEY_HASH]"}],"signature":"[SIGNATURE]","error":[{"kind":"branch","id":"proto.011-PtHangz2.contract.counter_in_the_past","contract":"[PUBLIC_KEY_HASH]","expected":"2","found":"1"}]},{"hash":"[OPERATION_HASH]","protocol":"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx","branch":"[BRANCH_HASH]","contents":[{"kind":"transaction","source":"[PUBLIC_KEY_HASH]","fee":"1000","counter":"5","gas_limit":"1040","storage_limit":"257","amount":"1000000","destination":"[PUBLIC_KEY_HASH]"}],"signature":"[SIGNATURE]","error":[{"kind":"temporary","id":"proto.011-PtHangz2.contract.counter_in_the_future","contract":"[PUBLIC_KEY_HASH]","expected":"1","found":"5"}]}]

./tezos-client --mode proxy rpc get /chains/main/mempool/filter
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "minimal_fees": "100", "minimal_nanotez_per_gas_unit": [ "100", "1" ],
  "minimal_nanotez_per_byte": [ "1000", "1" ], "allow_script_failure": true }

./tezos-client --mode proxy rpc get '/chains/main/mempool/filter?include_default=true'
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "minimal_fees": "100", "minimal_nanotez_per_gas_unit": [ "100", "1" ],
  "minimal_nanotez_per_byte": [ "1000", "1" ], "allow_script_failure": true }

./tezos-client --mode proxy rpc get '/chains/main/mempool/filter?include_default=false'
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{}

./tezos-client --mode proxy rpc post /chains/main/mempool/filter with '{
  "minimal_fees": "50",
  "minimal_nanotez_per_gas_unit": [
    "201",
    "5"
  ],
  "minimal_nanotez_per_byte": [
    "56",
    "3"
  ],
  "allow_script_failure": false
}'
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "minimal_fees": "50", "minimal_nanotez_per_gas_unit": [ "201", "5" ],
  "minimal_nanotez_per_byte": [ "56", "3" ], "allow_script_failure": false }

./tezos-client --mode proxy rpc get /chains/main/mempool/filter
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "minimal_fees": "50", "minimal_nanotez_per_gas_unit": [ "201", "5" ],
  "minimal_nanotez_per_byte": [ "56", "3" ], "allow_script_failure": false }

./tezos-client --mode proxy rpc get '/chains/main/mempool/filter?include_default=true'
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "minimal_fees": "50", "minimal_nanotez_per_gas_unit": [ "201", "5" ],
  "minimal_nanotez_per_byte": [ "56", "3" ], "allow_script_failure": false }

./tezos-client --mode proxy rpc get '/chains/main/mempool/filter?include_default=false'
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "minimal_fees": "50", "minimal_nanotez_per_gas_unit": [ "201", "5" ],
  "minimal_nanotez_per_byte": [ "56", "3" ], "allow_script_failure": false }

./tezos-client --mode proxy rpc post /chains/main/mempool/filter with '{
  "minimal_fees": "200",
  "allow_script_failure": true
}'
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "minimal_fees": "200", "minimal_nanotez_per_gas_unit": [ "100", "1" ],
  "minimal_nanotez_per_byte": [ "1000", "1" ], "allow_script_failure": true }

./tezos-client --mode proxy rpc get /chains/main/mempool/filter
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "minimal_fees": "200", "minimal_nanotez_per_gas_unit": [ "100", "1" ],
  "minimal_nanotez_per_byte": [ "1000", "1" ], "allow_script_failure": true }

./tezos-client --mode proxy rpc get '/chains/main/mempool/filter?include_default=true'
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "minimal_fees": "200", "minimal_nanotez_per_gas_unit": [ "100", "1" ],
  "minimal_nanotez_per_byte": [ "1000", "1" ], "allow_script_failure": true }

./tezos-client --mode proxy rpc get '/chains/main/mempool/filter?include_default=false'
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "minimal_fees": "200" }

./tezos-client --mode proxy rpc post /chains/main/mempool/filter with '{}'
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "minimal_fees": "100", "minimal_nanotez_per_gas_unit": [ "100", "1" ],
  "minimal_nanotez_per_byte": [ "1000", "1" ], "allow_script_failure": true }

./tezos-client --mode proxy rpc get /chains/main/mempool/filter
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "minimal_fees": "100", "minimal_nanotez_per_gas_unit": [ "100", "1" ],
  "minimal_nanotez_per_byte": [ "1000", "1" ], "allow_script_failure": true }

./tezos-client --mode proxy rpc get '/chains/main/mempool/filter?include_default=true'
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{ "minimal_fees": "100", "minimal_nanotez_per_gas_unit": [ "100", "1" ],
  "minimal_nanotez_per_byte": [ "1000", "1" ], "allow_script_failure": true }

./tezos-client --mode proxy rpc get '/chains/main/mempool/filter?include_default=false'
protocol of proxy unspecified, using the node's protocol: PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx
{}

curl -s 'http://localhost:[PORT]/describe/chains/main/mempool?recurse=yes'
{
  "static": {
    "subdirs": {
      "suffixes": [
        {
          "name": "ban_operation",
          "tree": {
            "static": {
              "post_service": {
                "meth": "POST",
                "path": [
                  "ban_operation"
                ],
                "description": "Remove an operation from the mempool if present, reverting its effect if it was applied. Add it to the set of banned operations to prevent it from being fetched/processed/injected in the future. Note: If the baker has already received the operation, then it's necessary to restart it to flush the operation from it.",
                "query": [],
                "input": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "$ref": "#/definitions/Operation_hash",
                    "definitions": {
                      "Operation_hash": {
                        "title": "A Tezos operation ID (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "unistring": {
                        "title": "Universal string representation",
                        "description": "Either a plain UTF8 string, or a sequence of bytes for strings that contain invalid byte sequences.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "invalid_utf8_string": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 255
                                }
                              }
                            },
                            "required": [
                              "invalid_utf8_string"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "name": "Operation_hash",
                          "layout": {
                            "kind": "Bytes"
                          },
                          "data_kind": {
                            "size": 32,
                            "kind": "Float"
                          },
                          "kind": "named"
                        }
                      ]
                    },
                    "fields": []
                  }
                },
                "output": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#"
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "layout": {
                            "kind": "Zero_width"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "size": 0,
                            "kind": "Float"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                },
                "error": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "$ref": "#/definitions/error",
                    "definitions": {
                      "error": {
                        "description": "The full list of errors is available with the global RPC `GET errors`"
                      }
                    }
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "kind": "dyn",
                          "num_fields": 1,
                          "size": "Uint30"
                        },
                        {
                          "layout": {
                            "kind": "String"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "kind": "Variable"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                }
              }
            }
          }
        },
        {
          "name": "filter",
          "tree": {
            "static": {
              "get_service": {
                "meth": "GET",
                "path": [
                  "filter"
                ],
                "description": "Get the configuration of the mempool filter. The minimal_fees are in mutez. Each field minimal_nanotez_per_xxx is a rational number given as a numerator and a denominator, e.g. \"minimal_nanotez_per_gas_unit\": [ \"100\", \"1\" ].",
                "query": [
                  {
                    "name": "include_default",
                    "description": "Show fields equal to their default value (set by default)",
                    "kind": {
                      "single": {
                        "id": "single",
                        "name": "bool"
                      }
                    }
                  }
                ],
                "output": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#"
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "kind": "dyn",
                          "num_fields": 1,
                          "size": "Uint30"
                        },
                        {
                          "layout": {
                            "kind": "String"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "kind": "Variable"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                },
                "error": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "$ref": "#/definitions/error",
                    "definitions": {
                      "error": {
                        "description": "The full list of errors is available with the global RPC `GET errors`"
                      }
                    }
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "kind": "dyn",
                          "num_fields": 1,
                          "size": "Uint30"
                        },
                        {
                          "layout": {
                            "kind": "String"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "kind": "Variable"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                }
              },
              "post_service": {
                "meth": "POST",
                "path": [
                  "filter"
                ],
                "description": "Set the configuration of the mempool filter. **If any of the fields is absent from the input JSON, then it is set to the default value for this field (i.e. its value in the default configuration), even if it previously had a different value.** If the input JSON does not describe a valid configuration, then the configuration is left unchanged. Also return the new configuration (which may differ from the input if it had omitted fields or was invalid). You may call [./tezos-client rpc get '/chains/main/mempool/filter?include_default=true'] to see an example of JSON describing a valid configuration.",
                "query": [],
                "input": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#"
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "kind": "dyn",
                          "num_fields": 1,
                          "size": "Uint30"
                        },
                        {
                          "layout": {
                            "kind": "String"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "kind": "Variable"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                },
                "output": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#"
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "kind": "dyn",
                          "num_fields": 1,
                          "size": "Uint30"
                        },
                        {
                          "layout": {
                            "kind": "String"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "kind": "Variable"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                },
                "error": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "$ref": "#/definitions/error",
                    "definitions": {
                      "error": {
                        "description": "The full list of errors is available with the global RPC `GET errors`"
                      }
                    }
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "kind": "dyn",
                          "num_fields": 1,
                          "size": "Uint30"
                        },
                        {
                          "layout": {
                            "kind": "String"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "kind": "Variable"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                }
              }
            }
          }
        },
        {
          "name": "monitor_operations",
          "tree": {
            "static": {
              "get_service": {
                "meth": "GET",
                "path": [
                  "monitor_operations"
                ],
                "description": "Monitor the mempool operations.",
                "query": [
                  {
                    "name": "applied",
                    "description": "Include applied operations (set by default)",
                    "kind": {
                      "single": {
                        "id": "single",
                        "name": "bool"
                      }
                    }
                  },
                  {
                    "name": "refused",
                    "description": "Include refused operations",
                    "kind": {
                      "single": {
                        "id": "single",
                        "name": "bool"
                      }
                    }
                  },
                  {
                    "name": "outdated",
                    "description": "Include outdated operations",
                    "kind": {
                      "single": {
                        "id": "single",
                        "name": "bool"
                      }
                    }
                  },
                  {
                    "name": "branch_refused",
                    "description": "Include branch refused operations",
                    "kind": {
                      "single": {
                        "id": "single",
                        "name": "bool"
                      }
                    }
                  },
                  {
                    "name": "branch_delayed",
                    "description": "Include branch delayed operations (set by default)",
                    "kind": {
                      "single": {
                        "id": "single",
                        "name": "bool"
                      }
                    }
                  }
                ],
                "output": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "array",
                    "items": {
                      "description": "An operation's shell header.",
                      "type": "object",
                      "properties": {
                        "hash": {
                          "$ref": "#/definitions/Operation_hash"
                        },
                        "protocol": {
                          "type": "string",
                          "enum": [
                            "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx"
                          ]
                        },
                        "branch": {
                          "$ref": "#/definitions/block_hash"
                        },
                        "contents": {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/011-PtHangz2.operation.alpha.contents"
                          }
                        },
                        "signature": {
                          "$ref": "#/definitions/Signature"
                        },
                        "error": {
                          "$ref": "#/definitions/error_opt"
                        }
                      },
                      "required": [
                        "signature",
                        "contents",
                        "branch",
                        "protocol",
                        "hash"
                      ],
                      "additionalProperties": false
                    },
                    "definitions": {
                      "011-PtHangz2.block_header.alpha.full_header": {
                        "title": "Shell header",
                        "description": "Block header's shell-related content. It contains information such as the block level, its predecessor and timestamp.",
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "integer",
                            "minimum": -2147483648,
                            "maximum": 2147483647
                          },
                          "proto": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 255
                          },
                          "predecessor": {
                            "$ref": "#/definitions/block_hash"
                          },
                          "timestamp": {
                            "$ref": "#/definitions/timestamp.protocol"
                          },
                          "validation_pass": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 255
                          },
                          "operations_hash": {
                            "$ref": "#/definitions/Operation_list_list_hash"
                          },
                          "fitness": {
                            "$ref": "#/definitions/fitness"
                          },
                          "context": {
                            "$ref": "#/definitions/Context_hash"
                          },
                          "priority": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "proof_of_work_nonce": {
                            "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                          },
                          "seed_nonce_hash": {
                            "$ref": "#/definitions/cycle_nonce"
                          },
                          "liquidity_baking_escape_vote": {
                            "type": "boolean"
                          },
                          "signature": {
                            "$ref": "#/definitions/Signature"
                          }
                        },
                        "required": [
                          "signature",
                          "liquidity_baking_escape_vote",
                          "proof_of_work_nonce",
                          "priority",
                          "context",
                          "fitness",
                          "operations_hash",
                          "validation_pass",
                          "timestamp",
                          "predecessor",
                          "proto",
                          "level"
                        ],
                        "additionalProperties": false
                      },
                      "011-PtHangz2.contract_id": {
                        "title": "A contract handle",
                        "description": "A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.",
                        "$ref": "#/definitions/unistring"
                      },
                      "011-PtHangz2.entrypoint": {
                        "title": "entrypoint",
                        "description": "Named entrypoint to a Michelson smart contract",
                        "oneOf": [
                          {
                            "title": "default",
                            "type": "string",
                            "enum": [
                              "default"
                            ]
                          },
                          {
                            "title": "root",
                            "type": "string",
                            "enum": [
                              "root"
                            ]
                          },
                          {
                            "title": "do",
                            "type": "string",
                            "enum": [
                              "do"
                            ]
                          },
                          {
                            "title": "set_delegate",
                            "type": "string",
                            "enum": [
                              "set_delegate"
                            ]
                          },
                          {
                            "title": "remove_delegate",
                            "type": "string",
                            "enum": [
                              "remove_delegate"
                            ]
                          },
                          {
                            "title": "named",
                            "type": "string"
                          }
                        ]
                      },
                      "011-PtHangz2.inlined.endorsement": {
                        "description": "An operation's shell header.",
                        "type": "object",
                        "properties": {
                          "branch": {
                            "$ref": "#/definitions/block_hash"
                          },
                          "operations": {
                            "$ref": "#/definitions/011-PtHangz2.inlined.endorsement.contents"
                          },
                          "signature": {
                            "$ref": "#/definitions/Signature"
                          }
                        },
                        "required": [
                          "operations",
                          "branch"
                        ],
                        "additionalProperties": false
                      },
                      "011-PtHangz2.inlined.endorsement.contents": {
                        "oneOf": [
                          {
                            "title": "Endorsement",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "endorsement"
                                ]
                              },
                              "level": {
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              }
                            },
                            "required": [
                              "level",
                              "kind"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "011-PtHangz2.michelson.v1.primitives": {
                        "type": "string",
                        "enum": [
                          "ABS",
                          "IF",
                          "SENDER",
                          "VOTING_POWER",
                          "False",
                          "NEVER",
                          "DUG",
                          "chest",
                          "BLAKE2B",
                          "map",
                          "bls12_381_g2",
                          "Pair",
                          "INT",
                          "option",
                          "bls12_381_g1",
                          "storage",
                          "SIZE",
                          "view",
                          "SHA256",
                          "AND",
                          "VIEW",
                          "mutez",
                          "NIL",
                          "big_map",
                          "SUB",
                          "SAPLING_VERIFY_UPDATE",
                          "CHECK_SIGNATURE",
                          "TOTAL_VOTING_POWER",
                          "address",
                          "MAP",
                          "or",
                          "ticket",
                          "ADD",
                          "IMPLICIT_ACCOUNT",
                          "SHA512",
                          "key",
                          "LSL",
                          "bls12_381_fr",
                          "chest_key",
                          "sapling_state",
                          "COMPARE",
                          "TRANSFER_TOKENS",
                          "STEPS_TO_QUOTA",
                          "DROP",
                          "set",
                          "BALANCE",
                          "CONCAT",
                          "MUL",
                          "FAILWITH",
                          "Elt",
                          "list",
                          "OR",
                          "DIP",
                          "MEM",
                          "LOOP_LEFT",
                          "lambda",
                          "ITER",
                          "Some",
                          "parameter",
                          "sapling_transaction",
                          "EMPTY_MAP",
                          "None",
                          "SET_DELEGATE",
                          "pair",
                          "AMOUNT",
                          "string",
                          "PAIRING_CHECK",
                          "bytes",
                          "CHAIN_ID",
                          "HASH_KEY",
                          "IF_LEFT",
                          "CREATE_ACCOUNT",
                          "LT",
                          "KECCAK",
                          "UNPACK",
                          "SPLIT_TICKET",
                          "SELF_ADDRESS",
                          "unit",
                          "UNIT",
                          "LE",
                          "SOURCE",
                          "CREATE_CONTRACT",
                          "Unit",
                          "DIG",
                          "NONE",
                          "ISNAT",
                          "GE",
                          "SOME",
                          "key_hash",
                          "SELF",
                          "signature",
                          "CAR",
                          "NOT",
                          "operation",
                          "CDR",
                          "ADDRESS",
                          "TICKET",
                          "RIGHT",
                          "LEFT",
                          "RENAME",
                          "True",
                          "Right",
                          "PACK",
                          "IF_CONS",
                          "SHA3",
                          "constant",
                          "UPDATE",
                          "EMPTY_SET",
                          "NEQ",
                          "LAMBDA",
                          "timestamp",
                          "READ_TICKET",
                          "LOOP",
                          "Left",
                          "int",
                          "LSR",
                          "EMPTY_BIG_MAP",
                          "chain_id",
                          "OPEN_CHEST",
                          "LEVEL",
                          "UNPAIR",
                          "JOIN_TICKETS",
                          "PUSH",
                          "nat",
                          "GT",
                          "never",
                          "NOW",
                          "IF_NONE",
                          "PAIR",
                          "GET_AND_UPDATE",
                          "XOR",
                          "CAST",
                          "bool",
                          "SAPLING_EMPTY_STATE",
                          "EDIV",
                          "EQ",
                          "CONTRACT",
                          "contract",
                          "EXEC",
                          "GET",
                          "NEG",
                          "SLICE",
                          "DUP",
                          "CONS",
                          "SWAP",
                          "APPLY",
                          "code"
                        ]
                      },
                      "011-PtHangz2.mutez": {
                        "$ref": "#/definitions/positive_bignum"
                      },
                      "011-PtHangz2.operation.alpha.contents": {
                        "oneOf": [
                          {
                            "title": "Endorsement",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "endorsement"
                                ]
                              },
                              "level": {
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              }
                            },
                            "required": [
                              "level",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Seed_nonce_revelation",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "seed_nonce_revelation"
                                ]
                              },
                              "level": {
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "nonce": {
                                "type": "string",
                                "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                              }
                            },
                            "required": [
                              "nonce",
                              "level",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Endorsement_with_slot",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "endorsement_with_slot"
                                ]
                              },
                              "endorsement": {
                                "$ref": "#/definitions/011-PtHangz2.inlined.endorsement"
                              },
                              "slot": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535
                              }
                            },
                            "required": [
                              "slot",
                              "endorsement",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Double_endorsement_evidence",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "double_endorsement_evidence"
                                ]
                              },
                              "op1": {
                                "$ref": "#/definitions/011-PtHangz2.inlined.endorsement"
                              },
                              "op2": {
                                "$ref": "#/definitions/011-PtHangz2.inlined.endorsement"
                              },
                              "slot": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535
                              }
                            },
                            "required": [
                              "slot",
                              "op2",
                              "op1",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Double_baking_evidence",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "double_baking_evidence"
                                ]
                              },
                              "bh1": {
                                "$ref": "#/definitions/011-PtHangz2.block_header.alpha.full_header"
                              },
                              "bh2": {
                                "$ref": "#/definitions/011-PtHangz2.block_header.alpha.full_header"
                              }
                            },
                            "required": [
                              "bh2",
                              "bh1",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Activate_account",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "activate_account"
                                ]
                              },
                              "pkh": {
                                "$ref": "#/definitions/Ed25519.Public_key_hash"
                              },
                              "secret": {
                                "type": "string",
                                "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                              }
                            },
                            "required": [
                              "secret",
                              "pkh",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Proposals",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "proposals"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "period": {
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "proposals": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/definitions/Protocol_hash"
                                }
                              }
                            },
                            "required": [
                              "proposals",
                              "period",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Ballot",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "ballot"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "period": {
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "proposal": {
                                "$ref": "#/definitions/Protocol_hash"
                              },
                              "ballot": {
                                "type": "string",
                                "enum": [
                                  "nay",
                                  "yay",
                                  "pass"
                                ]
                              }
                            },
                            "required": [
                              "ballot",
                              "proposal",
                              "period",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Reveal",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "reveal"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "fee": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "counter": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "gas_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "storage_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "public_key": {
                                "$ref": "#/definitions/Signature.Public_key"
                              }
                            },
                            "required": [
                              "public_key",
                              "storage_limit",
                              "gas_limit",
                              "counter",
                              "fee",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Transaction",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "transaction"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "fee": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "counter": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "gas_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "storage_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "amount": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "destination": {
                                "$ref": "#/definitions/011-PtHangz2.contract_id"
                              },
                              "parameters": {
                                "type": "object",
                                "properties": {
                                  "entrypoint": {
                                    "$ref": "#/definitions/011-PtHangz2.entrypoint"
                                  },
                                  "value": {
                                    "oneOf": [
                                      {
                                        "title": "Int",
                                        "type": "object",
                                        "properties": {
                                          "int": {
                                            "$ref": "#/definitions/bignum"
                                          }
                                        },
                                        "required": [
                                          "int"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "title": "String",
                                        "type": "object",
                                        "properties": {
                                          "string": {
                                            "$ref": "#/definitions/unistring"
                                          }
                                        },
                                        "required": [
                                          "string"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "title": "Bytes",
                                        "type": "object",
                                        "properties": {
                                          "bytes": {
                                            "type": "string",
                                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                                          }
                                        },
                                        "required": [
                                          "bytes"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "title": "Sequence",
                                        "type": "array",
                                        "items": {
                                          "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                        }
                                      },
                                      {
                                        "title": "Prim__generic",
                                        "description": "Generic primitive (any number of args with or without annotations)",
                                        "type": "object",
                                        "properties": {
                                          "prim": {
                                            "$ref": "#/definitions/011-PtHangz2.michelson.v1.primitives"
                                          },
                                          "args": {
                                            "type": "array",
                                            "items": {
                                              "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                            }
                                          },
                                          "annots": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "required": [
                                          "prim"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "value",
                                  "entrypoint"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "destination",
                              "amount",
                              "storage_limit",
                              "gas_limit",
                              "counter",
                              "fee",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Origination",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "origination"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "fee": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "counter": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "gas_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "storage_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "balance": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "delegate": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "script": {
                                "$ref": "#/definitions/011-PtHangz2.scripted.contracts"
                              }
                            },
                            "required": [
                              "script",
                              "balance",
                              "storage_limit",
                              "gas_limit",
                              "counter",
                              "fee",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Delegation",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "delegation"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "fee": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "counter": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "gas_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "storage_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "delegate": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              }
                            },
                            "required": [
                              "storage_limit",
                              "gas_limit",
                              "counter",
                              "fee",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Failing_noop",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "failing_noop"
                                ]
                              },
                              "arbitrary": {
                                "$ref": "#/definitions/unistring"
                              }
                            },
                            "required": [
                              "arbitrary",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Register_global_constant",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "register_global_constant"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "fee": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "counter": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "gas_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "storage_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "title": "Int",
                                    "type": "object",
                                    "properties": {
                                      "int": {
                                        "$ref": "#/definitions/bignum"
                                      }
                                    },
                                    "required": [
                                      "int"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "title": "String",
                                    "type": "object",
                                    "properties": {
                                      "string": {
                                        "$ref": "#/definitions/unistring"
                                      }
                                    },
                                    "required": [
                                      "string"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "title": "Bytes",
                                    "type": "object",
                                    "properties": {
                                      "bytes": {
                                        "type": "string",
                                        "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                                      }
                                    },
                                    "required": [
                                      "bytes"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "title": "Sequence",
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                    }
                                  },
                                  {
                                    "title": "Prim__generic",
                                    "description": "Generic primitive (any number of args with or without annotations)",
                                    "type": "object",
                                    "properties": {
                                      "prim": {
                                        "$ref": "#/definitions/011-PtHangz2.michelson.v1.primitives"
                                      },
                                      "args": {
                                        "type": "array",
                                        "items": {
                                          "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                        }
                                      },
                                      "annots": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "prim"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "required": [
                              "value",
                              "storage_limit",
                              "gas_limit",
                              "counter",
                              "fee",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "011-PtHangz2.scripted.contracts": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "oneOf": [
                              {
                                "title": "Int",
                                "type": "object",
                                "properties": {
                                  "int": {
                                    "$ref": "#/definitions/bignum"
                                  }
                                },
                                "required": [
                                  "int"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "String",
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "$ref": "#/definitions/unistring"
                                  }
                                },
                                "required": [
                                  "string"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "Bytes",
                                "type": "object",
                                "properties": {
                                  "bytes": {
                                    "type": "string",
                                    "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                                  }
                                },
                                "required": [
                                  "bytes"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "Sequence",
                                "type": "array",
                                "items": {
                                  "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                }
                              },
                              {
                                "title": "Prim__generic",
                                "description": "Generic primitive (any number of args with or without annotations)",
                                "type": "object",
                                "properties": {
                                  "prim": {
                                    "$ref": "#/definitions/011-PtHangz2.michelson.v1.primitives"
                                  },
                                  "args": {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                    }
                                  },
                                  "annots": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "prim"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          },
                          "storage": {
                            "oneOf": [
                              {
                                "title": "Int",
                                "type": "object",
                                "properties": {
                                  "int": {
                                    "$ref": "#/definitions/bignum"
                                  }
                                },
                                "required": [
                                  "int"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "String",
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "$ref": "#/definitions/unistring"
                                  }
                                },
                                "required": [
                                  "string"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "Bytes",
                                "type": "object",
                                "properties": {
                                  "bytes": {
                                    "type": "string",
                                    "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                                  }
                                },
                                "required": [
                                  "bytes"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "Sequence",
                                "type": "array",
                                "items": {
                                  "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                }
                              },
                              {
                                "title": "Prim__generic",
                                "description": "Generic primitive (any number of args with or without annotations)",
                                "type": "object",
                                "properties": {
                                  "prim": {
                                    "$ref": "#/definitions/011-PtHangz2.michelson.v1.primitives"
                                  },
                                  "args": {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                    }
                                  },
                                  "annots": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "prim"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          }
                        },
                        "required": [
                          "storage",
                          "code"
                        ],
                        "additionalProperties": false
                      },
                      "Context_hash": {
                        "title": "A hash of context (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Ed25519.Public_key_hash": {
                        "title": "An Ed25519 public key hash (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Operation_hash": {
                        "title": "A Tezos operation ID (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Operation_list_list_hash": {
                        "title": "A list of list of operations (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Protocol_hash": {
                        "title": "A Tezos protocol ID (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Signature": {
                        "title": "A Ed25519, Secp256k1 or P256 signature (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Signature.Public_key": {
                        "title": "A Ed25519, Secp256k1, or P256 public key (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Signature.Public_key_hash": {
                        "title": "A Ed25519, Secp256k1, or P256 public key hash (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "bignum": {
                        "title": "Big number",
                        "description": "Decimal representation of a big number",
                        "type": "string"
                      },
                      "block_hash": {
                        "title": "A block identifier (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "cycle_nonce": {
                        "title": "A nonce hash (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "error_opt": {
                        "description": "An optional error-trace (None indicates no error). The full list of errors is available with the global RPC `GET errors`"
                      },
                      "fitness": {
                        "title": "Block fitness",
                        "description": "The fitness, or score, of a block, that allow the Tezos to decide which chain is the best. A fitness value is a list of byte sequences. They are compared as follows: shortest lists are smaller; lists of the same length are compared according to the lexicographical order.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                        }
                      },
                      "micheline.011-PtHangz2.michelson_v1.expression": {
                        "oneOf": [
                          {
                            "title": "Int",
                            "type": "object",
                            "properties": {
                              "int": {
                                "$ref": "#/definitions/bignum"
                              }
                            },
                            "required": [
                              "int"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "String",
                            "type": "object",
                            "properties": {
                              "string": {
                                "$ref": "#/definitions/unistring"
                              }
                            },
                            "required": [
                              "string"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Bytes",
                            "type": "object",
                            "properties": {
                              "bytes": {
                                "type": "string",
                                "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                              }
                            },
                            "required": [
                              "bytes"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Sequence",
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                            }
                          },
                          {
                            "title": "Prim__generic",
                            "description": "Generic primitive (any number of args with or without annotations)",
                            "type": "object",
                            "properties": {
                              "prim": {
                                "$ref": "#/definitions/011-PtHangz2.michelson.v1.primitives"
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                }
                              },
                              "annots": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "prim"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "positive_bignum": {
                        "title": "Positive big number",
                        "description": "Decimal representation of a positive big number",
                        "type": "string"
                      },
                      "timestamp.protocol": {
                        "description": "A timestamp as seen by the protocol: second-level precision, epoch based.",
                        "$ref": "#/definitions/unistring"
                      },
                      "unistring": {
                        "title": "Universal string representation",
                        "description": "Either a plain UTF8 string, or a sequence of bytes for strings that contain invalid byte sequences.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "invalid_utf8_string": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 255
                                }
                              }
                            },
                            "required": [
                              "invalid_utf8_string"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "kind": "dyn",
                          "num_fields": 1,
                          "size": "Uint30"
                        },
                        {
                          "layout": {
                            "layout": {
                              "name": "X_0",
                              "kind": "Ref"
                            },
                            "kind": "Seq"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "kind": "Variable"
                          }
                        }
                      ]
                    },
                    "fields": [
                      {
                        "description": {
                          "title": "011-PtHangz2.scripted.contracts"
                        },
                        "encoding": {
                          "fields": [
                            {
                              "kind": "dyn",
                              "num_fields": 1,
                              "size": "Uint30"
                            },
                            {
                              "name": "code",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "kind": "Variable"
                              },
                              "kind": "named"
                            },
                            {
                              "kind": "dyn",
                              "num_fields": 1,
                              "size": "Uint30"
                            },
                            {
                              "name": "storage",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "kind": "Variable"
                              },
                              "kind": "named"
                            }
                          ]
                        }
                      },
                      {
                        "description": {
                          "title": "011-PtHangz2.contract_id"
                        },
                        "encoding": {
                          "tag_size": "Uint8",
                          "kind": {
                            "size": 22,
                            "kind": "Float"
                          },
                          "cases": [
                            {
                              "tag": 0,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "Signature.Public_key_hash",
                                  "layout": {
                                    "name": "public_key_hash",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "size": 21,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Implicit"
                            },
                            {
                              "tag": 1,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "Contract_hash",
                                  "layout": {
                                    "kind": "Bytes"
                                  },
                                  "data_kind": {
                                    "size": 20,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "padding",
                                  "layout": {
                                    "kind": "Padding"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Originated"
                            }
                          ]
                        }
                      },
                      {
                        "description": {
                          "title": "011-PtHangz2.entrypoint"
                        },
                        "encoding": {
                          "tag_size": "Uint8",
                          "kind": {
                            "kind": "Dynamic"
                          },
                          "cases": [
                            {
                              "tag": 0,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "layout": {
                                    "kind": "Zero_width"
                                  },
                                  "kind": "anon",
                                  "data_kind": {
                                    "size": 0,
                                    "kind": "Float"
                                  }
                                }
                              ],
                              "name": "default"
                            },
                            {
                              "tag": 1,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "layout": {
                                    "kind": "Zero_width"
                                  },
                                  "kind": "anon",
                                  "data_kind": {
                                    "size": 0,
                                    "kind": "Float"
                                  }
                                }
                              ],
                              "name": "root"
                            },
                            {
                              "tag": 2,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "layout": {
                                    "kind": "Zero_width"
                                  },
                                  "kind": "anon",
                                  "data_kind": {
                                    "size": 0,
                                    "kind": "Float"
                                  }
                                }
                              ],
                              "name": "do"
                            },
                            {
                              "tag": 3,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "layout": {
                                    "kind": "Zero_width"
                                  },
                                  "kind": "anon",
                                  "data_kind": {
                                    "size": 0,
                                    "kind": "Float"
                                  }
                                }
                              ],
                              "name": "set_delegate"
                            },
                            {
                              "tag": 4,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "layout": {
                                    "kind": "Zero_width"
                                  },
                                  "kind": "anon",
                                  "data_kind": {
                                    "size": 0,
                                    "kind": "Float"
                                  }
                                }
                              ],
                              "name": "remove_delegate"
                            },
                            {
                              "tag": 255,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "kind": "dyn",
                                  "num_fields": 1,
                                  "size": "Uint8"
                                },
                                {
                                  "layout": {
                                    "kind": "String"
                                  },
                                  "kind": "anon",
                                  "data_kind": {
                                    "kind": "Variable"
                                  }
                                }
                              ],
                              "name": "named"
                            }
                          ]
                        }
                      },
                      {
                        "description": {
                          "title": "X_1"
                        },
                        "encoding": {
                          "fields": [
                            {
                              "name": "entrypoint",
                              "layout": {
                                "name": "011-PtHangz2.entrypoint",
                                "kind": "Ref"
                              },
                              "data_kind": {
                                "kind": "Dynamic"
                              },
                              "kind": "named"
                            },
                            {
                              "kind": "dyn",
                              "num_fields": 1,
                              "size": "Uint30"
                            },
                            {
                              "name": "value",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "kind": "Variable"
                              },
                              "kind": "named"
                            }
                          ]
                        }
                      },
                      {
                        "description": {
                          "title": "N.t",
                          "description": "A variable-length sequence of bytes encoding a Zarith natural number. Each byte has a running unary size bit: the most significant bit of each byte indicates whether this is the last byte in the sequence (0) or whether the sequence continues (1). Size bits ignored, the data is the binary representation of the number in little-endian order."
                        },
                        "encoding": {
                          "fields": [
                            {
                              "name": "N.t",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "kind": "Dynamic"
                              },
                              "kind": "named"
                            }
                          ]
                        }
                      },
                      {
                        "description": {
                          "title": "public_key"
                        },
                        "encoding": {
                          "tag_size": "Uint8",
                          "kind": {
                            "kind": "Dynamic"
                          },
                          "cases": [
                            {
                              "tag": 0,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "Ed25519.Public_key",
                                  "layout": {
                                    "kind": "Bytes"
                                  },
                                  "data_kind": {
                                    "size": 32,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Ed25519"
                            },
                            {
                              "tag": 1,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "Secp256k1.Public_key",
                                  "layout": {
                                    "kind": "Bytes"
                                  },
                                  "data_kind": {
                                    "size": 33,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Secp256k1"
                            },
                            {
                              "tag": 2,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "P256.Public_key",
                                  "layout": {
                                    "kind": "Bytes"
                                  },
                                  "data_kind": {
                                    "size": 33,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "P256"
                            }
                          ]
                        }
                      },
                      {
                        "description": {
                          "title": "public_key_hash"
                        },
                        "encoding": {
                          "tag_size": "Uint8",
                          "kind": {
                            "size": 21,
                            "kind": "Float"
                          },
                          "cases": [
                            {
                              "tag": 0,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "Ed25519.Public_key_hash",
                                  "layout": {
                                    "kind": "Bytes"
                                  },
                                  "data_kind": {
                                    "size": 20,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Ed25519"
                            },
                            {
                              "tag": 1,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "Secp256k1.Public_key_hash",
                                  "layout": {
                                    "kind": "Bytes"
                                  },
                                  "data_kind": {
                                    "size": 20,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Secp256k1"
                            },
                            {
                              "tag": 2,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "P256.Public_key_hash",
                                  "layout": {
                                    "kind": "Bytes"
                                  },
                                  "data_kind": {
                                    "size": 20,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "P256"
                            }
                          ]
                        }
                      },
                      {
                        "description": {
                          "title": "fitness.elem"
                        },
                        "encoding": {
                          "fields": [
                            {
                              "kind": "dyn",
                              "num_fields": 1,
                              "size": "Uint30"
                            },
                            {
                              "layout": {
                                "kind": "Bytes"
                              },
                              "kind": "anon",
                              "data_kind": {
                                "kind": "Variable"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "description": {
                          "title": "011-PtHangz2.block_header.alpha.full_header"
                        },
                        "encoding": {
                          "fields": [
                            {
                              "name": "level",
                              "layout": {
                                "size": "Int32",
                                "kind": "Int"
                              },
                              "data_kind": {
                                "size": 4,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "name": "proto",
                              "layout": {
                                "size": "Uint8",
                                "kind": "Int"
                              },
                              "data_kind": {
                                "size": 1,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "name": "predecessor",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "size": 32,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "name": "timestamp",
                              "layout": {
                                "size": "Int64",
                                "kind": "Int"
                              },
                              "data_kind": {
                                "size": 8,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "name": "validation_pass",
                              "layout": {
                                "size": "Uint8",
                                "kind": "Int"
                              },
                              "data_kind": {
                                "size": 1,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "name": "operations_hash",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "size": 32,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "kind": "dyn",
                              "name": "fitness",
                              "num_fields": 1,
                              "size": "Uint30"
                            },
                            {
                              "name": "fitness",
                              "layout": {
                                "layout": {
                                  "name": "fitness.elem",
                                  "kind": "Ref"
                                },
                                "kind": "Seq"
                              },
                              "data_kind": {
                                "kind": "Variable"
                              },
                              "kind": "named"
                            },
                            {
                              "name": "context",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "size": 32,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "name": "priority",
                              "layout": {
                                "size": "Uint16",
                                "kind": "Int"
                              },
                              "data_kind": {
                                "size": 2,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "name": "proof_of_work_nonce",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "size": 8,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "kind": "option_indicator",
                              "name": "seed_nonce_hash"
                            },
                            {
                              "name": "seed_nonce_hash",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "size": 32,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "name": "liquidity_baking_escape_vote",
                              "layout": {
                                "kind": "Bool"
                              },
                              "data_kind": {
                                "size": 1,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "name": "signature",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "size": 64,
                                "kind": "Float"
                              },
                              "kind": "named"
                            }
                          ]
                        }
                      },
                      {
                        "description": {
                          "title": "011-PtHangz2.inlined.endorsement.contents"
                        },
                        "encoding": {
                          "tag_size": "Uint8",
                          "kind": {
                            "size": 5,
                            "kind": "Float"
                          },
                          "cases": [
                            {
                              "tag": 0,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "level",
                                  "layout": {
                                    "size": "Int32",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 4,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Endorsement"
                            }
                          ]
                        }
                      },
                      {
                        "description": {
                          "title": "011-PtHangz2.inlined.endorsement"
                        },
                        "encoding": {
                          "fields": [
                            {
                              "name": "branch",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "size": 32,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "name": "operations",
                              "layout": {
                                "name": "011-PtHangz2.inlined.endorsement.contents",
                                "kind": "Ref"
                              },
                              "data_kind": {
                                "size": 5,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "name": "signature",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "kind": "Variable"
                              },
                              "kind": "named"
                            }
                          ]
                        }
                      },
                      {
                        "description": {
                          "title": "011-PtHangz2.operation.alpha.contents"
                        },
                        "encoding": {
                          "tag_size": "Uint8",
                          "kind": {
                            "kind": "Dynamic"
                          },
                          "cases": [
                            {
                              "tag": 0,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "level",
                                  "layout": {
                                    "size": "Int32",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 4,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Endorsement"
                            },
                            {
                              "tag": 1,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "level",
                                  "layout": {
                                    "size": "Int32",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 4,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "nonce",
                                  "layout": {
                                    "kind": "Bytes"
                                  },
                                  "data_kind": {
                                    "size": 32,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Seed_nonce_revelation"
                            },
                            {
                              "tag": 2,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "kind": "dyn",
                                  "num_fields": 1,
                                  "size": "Uint30"
                                },
                                {
                                  "name": "op1",
                                  "layout": {
                                    "name": "011-PtHangz2.inlined.endorsement",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Variable"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "kind": "dyn",
                                  "num_fields": 1,
                                  "size": "Uint30"
                                },
                                {
                                  "name": "op2",
                                  "layout": {
                                    "name": "011-PtHangz2.inlined.endorsement",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Variable"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "slot",
                                  "layout": {
                                    "size": "Uint16",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 2,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Double_endorsement_evidence"
                            },
                            {
                              "tag": 3,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "kind": "dyn",
                                  "num_fields": 1,
                                  "size": "Uint30"
                                },
                                {
                                  "name": "bh1",
                                  "layout": {
                                    "name": "011-PtHangz2.block_header.alpha.full_header",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "kind": "dyn",
                                  "num_fields": 1,
                                  "size": "Uint30"
                                },
                                {
                                  "name": "bh2",
                                  "layout": {
                                    "name": "011-PtHangz2.block_header.alpha.full_header",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Double_baking_evidence"
                            },
                            {
                              "tag": 4,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "pkh",
                                  "layout": {
                                    "kind": "Bytes"
                                  },
                                  "data_kind": {
                                    "size": 20,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "secret",
                                  "layout": {
                                    "kind": "Bytes"
                                  },
                                  "data_kind": {
                                    "size": 20,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Activate_account"
                            },
                            {
                              "tag": 5,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "source",
                                  "layout": {
                                    "name": "public_key_hash",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "size": 21,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "period",
                                  "layout": {
                                    "size": "Int32",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 4,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "kind": "dyn",
                                  "num_fields": 1,
                                  "size": "Uint30"
                                },
                                {
                                  "name": "proposals",
                                  "layout": {
                                    "layout": {
                                      "kind": "Bytes"
                                    },
                                    "kind": "Seq"
                                  },
                                  "data_kind": {
                                    "kind": "Variable"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Proposals"
                            },
                            {
                              "tag": 6,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "source",
                                  "layout": {
                                    "name": "public_key_hash",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "size": 21,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "period",
                                  "layout": {
                                    "size": "Int32",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 4,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "proposal",
                                  "layout": {
                                    "kind": "Bytes"
                                  },
                                  "data_kind": {
                                    "size": 32,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "ballot",
                                  "layout": {
                                    "size": "Int8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Ballot"
                            },
                            {
                              "tag": 10,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "kind": "dyn",
                                  "num_fields": 1,
                                  "size": "Uint30"
                                },
                                {
                                  "name": "endorsement",
                                  "layout": {
                                    "name": "011-PtHangz2.inlined.endorsement",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Variable"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "slot",
                                  "layout": {
                                    "size": "Uint16",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 2,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Endorsement_with_slot"
                            },
                            {
                              "tag": 17,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "kind": "dyn",
                                  "num_fields": 1,
                                  "size": "Uint30"
                                },
                                {
                                  "name": "arbitrary",
                                  "layout": {
                                    "kind": "String"
                                  },
                                  "data_kind": {
                                    "kind": "Variable"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Failing_noop"
                            },
                            {
                              "tag": 107,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "source",
                                  "layout": {
                                    "name": "public_key_hash",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "size": 21,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "fee",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "counter",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "gas_limit",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "storage_limit",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "public_key",
                                  "layout": {
                                    "name": "public_key",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Reveal"
                            },
                            {
                              "tag": 108,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "source",
                                  "layout": {
                                    "name": "public_key_hash",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "size": 21,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "fee",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "counter",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "gas_limit",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "storage_limit",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "amount",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "destination",
                                  "layout": {
                                    "name": "011-PtHangz2.contract_id",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "size": 22,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "kind": "option_indicator",
                                  "name": "parameters"
                                },
                                {
                                  "name": "parameters",
                                  "layout": {
                                    "name": "X_1",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Transaction"
                            },
                            {
                              "tag": 109,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "source",
                                  "layout": {
                                    "name": "public_key_hash",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "size": 21,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "fee",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "counter",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "gas_limit",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "storage_limit",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "balance",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "kind": "option_indicator",
                                  "name": "delegate"
                                },
                                {
                                  "name": "delegate",
                                  "layout": {
                                    "name": "public_key_hash",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "size": 21,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "script",
                                  "layout": {
                                    "name": "011-PtHangz2.scripted.contracts",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Origination"
                            },
                            {
                              "tag": 110,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "source",
                                  "layout": {
                                    "name": "public_key_hash",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "size": 21,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "fee",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "counter",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "gas_limit",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "storage_limit",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "kind": "option_indicator",
                                  "name": "delegate"
                                },
                                {
                                  "name": "delegate",
                                  "layout": {
                                    "name": "public_key_hash",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "size": 21,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Delegation"
                            },
                            {
                              "tag": 111,
                              "fields": [
                                {
                                  "name": "Tag",
                                  "layout": {
                                    "size": "Uint8",
                                    "kind": "Int"
                                  },
                                  "data_kind": {
                                    "size": 1,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "source",
                                  "layout": {
                                    "name": "public_key_hash",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "size": 21,
                                    "kind": "Float"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "fee",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "counter",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "gas_limit",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "name": "storage_limit",
                                  "layout": {
                                    "name": "N.t",
                                    "kind": "Ref"
                                  },
                                  "data_kind": {
                                    "kind": "Dynamic"
                                  },
                                  "kind": "named"
                                },
                                {
                                  "kind": "dyn",
                                  "num_fields": 1,
                                  "size": "Uint30"
                                },
                                {
                                  "name": "value",
                                  "layout": {
                                    "kind": "Bytes"
                                  },
                                  "data_kind": {
                                    "kind": "Variable"
                                  },
                                  "kind": "named"
                                }
                              ],
                              "name": "Register_global_constant"
                            }
                          ]
                        }
                      },
                      {
                        "description": {
                          "title": "X_0"
                        },
                        "encoding": {
                          "fields": [
                            {
                              "name": "hash",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "size": 32,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "kind": "dyn",
                              "num_fields": 1,
                              "size": "Uint30"
                            },
                            {
                              "name": "branch",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "size": 32,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "kind": "dyn",
                              "num_fields": 2,
                              "size": "Uint30"
                            },
                            {
                              "name": "contents",
                              "layout": {
                                "layout": {
                                  "name": "011-PtHangz2.operation.alpha.contents",
                                  "kind": "Ref"
                                },
                                "kind": "Seq"
                              },
                              "data_kind": {
                                "kind": "Variable"
                              },
                              "kind": "named"
                            },
                            {
                              "name": "signature",
                              "layout": {
                                "kind": "Bytes"
                              },
                              "data_kind": {
                                "size": 64,
                                "kind": "Float"
                              },
                              "kind": "named"
                            },
                            {
                              "kind": "dyn",
                              "name": "error_opt",
                              "num_fields": 1,
                              "size": "Uint30"
                            },
                            {
                              "name": "error",
                              "layout": {
                                "kind": "String"
                              },
                              "data_kind": {
                                "kind": "Variable"
                              },
                              "kind": "named"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "error": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "$ref": "#/definitions/error",
                    "definitions": {
                      "error": {
                        "description": "The full list of errors is available with the global RPC `GET errors`"
                      }
                    }
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "kind": "dyn",
                          "num_fields": 1,
                          "size": "Uint30"
                        },
                        {
                          "layout": {
                            "kind": "String"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "kind": "Variable"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                }
              }
            }
          }
        },
        {
          "name": "pending_operations",
          "tree": {
            "static": {
              "get_service": {
                "meth": "GET",
                "path": [
                  "pending_operations"
                ],
                "description": "List the prevalidated operations.",
                "query": [
                  {
                    "name": "version",
                    "kind": {
                      "single": {
                        "id": "single",
                        "name": "int"
                      }
                    }
                  }
                ],
                "output": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "oneOf": [
                      {
                        "title": "new_encoding_pending_operations",
                        "type": "object",
                        "properties": {
                          "applied": {
                            "type": "array",
                            "items": {
                              "description": "An operation's shell header.",
                              "type": "object",
                              "properties": {
                                "hash": {
                                  "$ref": "#/definitions/Operation_hash"
                                },
                                "branch": {
                                  "$ref": "#/definitions/block_hash"
                                },
                                "contents": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/definitions/011-PtHangz2.operation.alpha.contents"
                                  }
                                },
                                "signature": {
                                  "$ref": "#/definitions/Signature"
                                }
                              },
                              "required": [
                                "signature",
                                "contents",
                                "branch",
                                "hash"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "refused": {
                            "type": "array",
                            "items": {
                              "description": "An operation's shell header.",
                              "type": "object",
                              "properties": {
                                "hash": {
                                  "$ref": "#/definitions/Operation_hash"
                                },
                                "protocol": {
                                  "type": "string",
                                  "enum": [
                                    "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx"
                                  ]
                                },
                                "branch": {
                                  "$ref": "#/definitions/block_hash"
                                },
                                "contents": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/definitions/011-PtHangz2.operation.alpha.contents"
                                  }
                                },
                                "signature": {
                                  "$ref": "#/definitions/Signature"
                                },
                                "error": {
                                  "$ref": "#/definitions/error"
                                }
                              },
                              "required": [
                                "error",
                                "signature",
                                "contents",
                                "branch",
                                "protocol",
                                "hash"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "outdated": {
                            "type": "array",
                            "items": {
                              "description": "An operation's shell header.",
                              "type": "object",
                              "properties": {
                                "hash": {
                                  "$ref": "#/definitions/Operation_hash"
                                },
                                "protocol": {
                                  "type": "string",
                                  "enum": [
                                    "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx"
                                  ]
                                },
                                "branch": {
                                  "$ref": "#/definitions/block_hash"
                                },
                                "contents": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/definitions/011-PtHangz2.operation.alpha.contents"
                                  }
                                },
                                "signature": {
                                  "$ref": "#/definitions/Signature"
                                },
                                "error": {
                                  "$ref": "#/definitions/error"
                                }
                              },
                              "required": [
                                "error",
                                "signature",
                                "contents",
                                "branch",
                                "protocol",
                                "hash"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "branch_refused": {
                            "type": "array",
                            "items": {
                              "description": "An operation's shell header.",
                              "type": "object",
                              "properties": {
                                "hash": {
                                  "$ref": "#/definitions/Operation_hash"
                                },
                                "protocol": {
                                  "type": "string",
                                  "enum": [
                                    "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx"
                                  ]
                                },
                                "branch": {
                                  "$ref": "#/definitions/block_hash"
                                },
                                "contents": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/definitions/011-PtHangz2.operation.alpha.contents"
                                  }
                                },
                                "signature": {
                                  "$ref": "#/definitions/Signature"
                                },
                                "error": {
                                  "$ref": "#/definitions/error"
                                }
                              },
                              "required": [
                                "error",
                                "signature",
                                "contents",
                                "branch",
                                "protocol",
                                "hash"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "branch_delayed": {
                            "type": "array",
                            "items": {
                              "description": "An operation's shell header.",
                              "type": "object",
                              "properties": {
                                "hash": {
                                  "$ref": "#/definitions/Operation_hash"
                                },
                                "protocol": {
                                  "type": "string",
                                  "enum": [
                                    "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx"
                                  ]
                                },
                                "branch": {
                                  "$ref": "#/definitions/block_hash"
                                },
                                "contents": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/definitions/011-PtHangz2.operation.alpha.contents"
                                  }
                                },
                                "signature": {
                                  "$ref": "#/definitions/Signature"
                                },
                                "error": {
                                  "$ref": "#/definitions/error"
                                }
                              },
                              "required": [
                                "error",
                                "signature",
                                "contents",
                                "branch",
                                "protocol",
                                "hash"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "unprocessed": {
                            "type": "array",
                            "items": {
                              "description": "An operation's shell header.",
                              "type": "object",
                              "properties": {
                                "hash": {
                                  "$ref": "#/definitions/Operation_hash"
                                },
                                "protocol": {
                                  "type": "string",
                                  "enum": [
                                    "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx"
                                  ]
                                },
                                "branch": {
                                  "$ref": "#/definitions/block_hash"
                                },
                                "contents": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/definitions/011-PtHangz2.operation.alpha.contents"
                                  }
                                },
                                "signature": {
                                  "$ref": "#/definitions/Signature"
                                }
                              },
                              "required": [
                                "signature",
                                "contents",
                                "branch",
                                "protocol",
                                "hash"
                              ],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": [
                          "unprocessed",
                          "branch_delayed",
                          "branch_refused",
                          "outdated",
                          "refused",
                          "applied"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "title": "old_encoding_pending_operations",
                        "type": "object",
                        "properties": {
                          "applied": {
                            "type": "array",
                            "items": {
                              "description": "An operation's shell header.",
                              "type": "object",
                              "properties": {
                                "hash": {
                                  "$ref": "#/definitions/Operation_hash"
                                },
                                "branch": {
                                  "$ref": "#/definitions/block_hash"
                                },
                                "contents": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/definitions/011-PtHangz2.operation.alpha.contents"
                                  }
                                },
                                "signature": {
                                  "$ref": "#/definitions/Signature"
                                }
                              },
                              "required": [
                                "signature",
                                "contents",
                                "branch",
                                "hash"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "refused": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": [
                                {
                                  "$ref": "#/definitions/Operation_hash"
                                },
                                {
                                  "description": "An operation's shell header.",
                                  "type": "object",
                                  "properties": {
                                    "protocol": {
                                      "type": "string",
                                      "enum": [
                                        "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx"
                                      ]
                                    },
                                    "branch": {
                                      "$ref": "#/definitions/block_hash"
                                    },
                                    "contents": {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/definitions/011-PtHangz2.operation.alpha.contents"
                                      }
                                    },
                                    "signature": {
                                      "$ref": "#/definitions/Signature"
                                    },
                                    "error": {
                                      "$ref": "#/definitions/error"
                                    }
                                  },
                                  "required": [
                                    "error",
                                    "signature",
                                    "contents",
                                    "branch",
                                    "protocol"
                                  ],
                                  "additionalProperties": false
                                }
                              ],
                              "additionalItems": false
                            }
                          },
                          "outdated": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": [
                                {
                                  "$ref": "#/definitions/Operation_hash"
                                },
                                {
                                  "description": "An operation's shell header.",
                                  "type": "object",
                                  "properties": {
                                    "protocol": {
                                      "type": "string",
                                      "enum": [
                                        "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx"
                                      ]
                                    },
                                    "branch": {
                                      "$ref": "#/definitions/block_hash"
                                    },
                                    "contents": {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/definitions/011-PtHangz2.operation.alpha.contents"
                                      }
                                    },
                                    "signature": {
                                      "$ref": "#/definitions/Signature"
                                    },
                                    "error": {
                                      "$ref": "#/definitions/error"
                                    }
                                  },
                                  "required": [
                                    "error",
                                    "signature",
                                    "contents",
                                    "branch",
                                    "protocol"
                                  ],
                                  "additionalProperties": false
                                }
                              ],
                              "additionalItems": false
                            }
                          },
                          "branch_refused": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": [
                                {
                                  "$ref": "#/definitions/Operation_hash"
                                },
                                {
                                  "description": "An operation's shell header.",
                                  "type": "object",
                                  "properties": {
                                    "protocol": {
                                      "type": "string",
                                      "enum": [
                                        "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx"
                                      ]
                                    },
                                    "branch": {
                                      "$ref": "#/definitions/block_hash"
                                    },
                                    "contents": {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/definitions/011-PtHangz2.operation.alpha.contents"
                                      }
                                    },
                                    "signature": {
                                      "$ref": "#/definitions/Signature"
                                    },
                                    "error": {
                                      "$ref": "#/definitions/error"
                                    }
                                  },
                                  "required": [
                                    "error",
                                    "signature",
                                    "contents",
                                    "branch",
                                    "protocol"
                                  ],
                                  "additionalProperties": false
                                }
                              ],
                              "additionalItems": false
                            }
                          },
                          "branch_delayed": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": [
                                {
                                  "$ref": "#/definitions/Operation_hash"
                                },
                                {
                                  "description": "An operation's shell header.",
                                  "type": "object",
                                  "properties": {
                                    "protocol": {
                                      "type": "string",
                                      "enum": [
                                        "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx"
                                      ]
                                    },
                                    "branch": {
                                      "$ref": "#/definitions/block_hash"
                                    },
                                    "contents": {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/definitions/011-PtHangz2.operation.alpha.contents"
                                      }
                                    },
                                    "signature": {
                                      "$ref": "#/definitions/Signature"
                                    },
                                    "error": {
                                      "$ref": "#/definitions/error"
                                    }
                                  },
                                  "required": [
                                    "error",
                                    "signature",
                                    "contents",
                                    "branch",
                                    "protocol"
                                  ],
                                  "additionalProperties": false
                                }
                              ],
                              "additionalItems": false
                            }
                          },
                          "unprocessed": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": [
                                {
                                  "$ref": "#/definitions/Operation_hash"
                                },
                                {
                                  "$ref": "#/definitions/next_operation"
                                }
                              ],
                              "additionalItems": false
                            }
                          }
                        },
                        "required": [
                          "unprocessed",
                          "branch_delayed",
                          "branch_refused",
                          "outdated",
                          "refused",
                          "applied"
                        ],
                        "additionalProperties": false
                      }
                    ],
                    "definitions": {
                      "011-PtHangz2.block_header.alpha.full_header": {
                        "title": "Shell header",
                        "description": "Block header's shell-related content. It contains information such as the block level, its predecessor and timestamp.",
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "integer",
                            "minimum": -2147483648,
                            "maximum": 2147483647
                          },
                          "proto": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 255
                          },
                          "predecessor": {
                            "$ref": "#/definitions/block_hash"
                          },
                          "timestamp": {
                            "$ref": "#/definitions/timestamp.protocol"
                          },
                          "validation_pass": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 255
                          },
                          "operations_hash": {
                            "$ref": "#/definitions/Operation_list_list_hash"
                          },
                          "fitness": {
                            "$ref": "#/definitions/fitness"
                          },
                          "context": {
                            "$ref": "#/definitions/Context_hash"
                          },
                          "priority": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "proof_of_work_nonce": {
                            "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                          },
                          "seed_nonce_hash": {
                            "$ref": "#/definitions/cycle_nonce"
                          },
                          "liquidity_baking_escape_vote": {
                            "type": "boolean"
                          },
                          "signature": {
                            "$ref": "#/definitions/Signature"
                          }
                        },
                        "required": [
                          "signature",
                          "liquidity_baking_escape_vote",
                          "proof_of_work_nonce",
                          "priority",
                          "context",
                          "fitness",
                          "operations_hash",
                          "validation_pass",
                          "timestamp",
                          "predecessor",
                          "proto",
                          "level"
                        ],
                        "additionalProperties": false
                      },
                      "011-PtHangz2.contract_id": {
                        "title": "A contract handle",
                        "description": "A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.",
                        "$ref": "#/definitions/unistring"
                      },
                      "011-PtHangz2.entrypoint": {
                        "title": "entrypoint",
                        "description": "Named entrypoint to a Michelson smart contract",
                        "oneOf": [
                          {
                            "title": "default",
                            "type": "string",
                            "enum": [
                              "default"
                            ]
                          },
                          {
                            "title": "root",
                            "type": "string",
                            "enum": [
                              "root"
                            ]
                          },
                          {
                            "title": "do",
                            "type": "string",
                            "enum": [
                              "do"
                            ]
                          },
                          {
                            "title": "set_delegate",
                            "type": "string",
                            "enum": [
                              "set_delegate"
                            ]
                          },
                          {
                            "title": "remove_delegate",
                            "type": "string",
                            "enum": [
                              "remove_delegate"
                            ]
                          },
                          {
                            "title": "named",
                            "type": "string"
                          }
                        ]
                      },
                      "011-PtHangz2.inlined.endorsement": {
                        "description": "An operation's shell header.",
                        "type": "object",
                        "properties": {
                          "branch": {
                            "$ref": "#/definitions/block_hash"
                          },
                          "operations": {
                            "$ref": "#/definitions/011-PtHangz2.inlined.endorsement.contents"
                          },
                          "signature": {
                            "$ref": "#/definitions/Signature"
                          }
                        },
                        "required": [
                          "operations",
                          "branch"
                        ],
                        "additionalProperties": false
                      },
                      "011-PtHangz2.inlined.endorsement.contents": {
                        "oneOf": [
                          {
                            "title": "Endorsement",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "endorsement"
                                ]
                              },
                              "level": {
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              }
                            },
                            "required": [
                              "level",
                              "kind"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "011-PtHangz2.michelson.v1.primitives": {
                        "type": "string",
                        "enum": [
                          "ABS",
                          "IF",
                          "SENDER",
                          "VOTING_POWER",
                          "False",
                          "NEVER",
                          "DUG",
                          "chest",
                          "BLAKE2B",
                          "map",
                          "bls12_381_g2",
                          "Pair",
                          "INT",
                          "option",
                          "bls12_381_g1",
                          "storage",
                          "SIZE",
                          "view",
                          "SHA256",
                          "AND",
                          "VIEW",
                          "mutez",
                          "NIL",
                          "big_map",
                          "SUB",
                          "SAPLING_VERIFY_UPDATE",
                          "CHECK_SIGNATURE",
                          "TOTAL_VOTING_POWER",
                          "address",
                          "MAP",
                          "or",
                          "ticket",
                          "ADD",
                          "IMPLICIT_ACCOUNT",
                          "SHA512",
                          "key",
                          "LSL",
                          "bls12_381_fr",
                          "chest_key",
                          "sapling_state",
                          "COMPARE",
                          "TRANSFER_TOKENS",
                          "STEPS_TO_QUOTA",
                          "DROP",
                          "set",
                          "BALANCE",
                          "CONCAT",
                          "MUL",
                          "FAILWITH",
                          "Elt",
                          "list",
                          "OR",
                          "DIP",
                          "MEM",
                          "LOOP_LEFT",
                          "lambda",
                          "ITER",
                          "Some",
                          "parameter",
                          "sapling_transaction",
                          "EMPTY_MAP",
                          "None",
                          "SET_DELEGATE",
                          "pair",
                          "AMOUNT",
                          "string",
                          "PAIRING_CHECK",
                          "bytes",
                          "CHAIN_ID",
                          "HASH_KEY",
                          "IF_LEFT",
                          "CREATE_ACCOUNT",
                          "LT",
                          "KECCAK",
                          "UNPACK",
                          "SPLIT_TICKET",
                          "SELF_ADDRESS",
                          "unit",
                          "UNIT",
                          "LE",
                          "SOURCE",
                          "CREATE_CONTRACT",
                          "Unit",
                          "DIG",
                          "NONE",
                          "ISNAT",
                          "GE",
                          "SOME",
                          "key_hash",
                          "SELF",
                          "signature",
                          "CAR",
                          "NOT",
                          "operation",
                          "CDR",
                          "ADDRESS",
                          "TICKET",
                          "RIGHT",
                          "LEFT",
                          "RENAME",
                          "True",
                          "Right",
                          "PACK",
                          "IF_CONS",
                          "SHA3",
                          "constant",
                          "UPDATE",
                          "EMPTY_SET",
                          "NEQ",
                          "LAMBDA",
                          "timestamp",
                          "READ_TICKET",
                          "LOOP",
                          "Left",
                          "int",
                          "LSR",
                          "EMPTY_BIG_MAP",
                          "chain_id",
                          "OPEN_CHEST",
                          "LEVEL",
                          "UNPAIR",
                          "JOIN_TICKETS",
                          "PUSH",
                          "nat",
                          "GT",
                          "never",
                          "NOW",
                          "IF_NONE",
                          "PAIR",
                          "GET_AND_UPDATE",
                          "XOR",
                          "CAST",
                          "bool",
                          "SAPLING_EMPTY_STATE",
                          "EDIV",
                          "EQ",
                          "CONTRACT",
                          "contract",
                          "EXEC",
                          "GET",
                          "NEG",
                          "SLICE",
                          "DUP",
                          "CONS",
                          "SWAP",
                          "APPLY",
                          "code"
                        ]
                      },
                      "011-PtHangz2.mutez": {
                        "$ref": "#/definitions/positive_bignum"
                      },
                      "011-PtHangz2.operation.alpha.contents": {
                        "oneOf": [
                          {
                            "title": "Endorsement",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "endorsement"
                                ]
                              },
                              "level": {
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              }
                            },
                            "required": [
                              "level",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Seed_nonce_revelation",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "seed_nonce_revelation"
                                ]
                              },
                              "level": {
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "nonce": {
                                "type": "string",
                                "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                              }
                            },
                            "required": [
                              "nonce",
                              "level",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Endorsement_with_slot",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "endorsement_with_slot"
                                ]
                              },
                              "endorsement": {
                                "$ref": "#/definitions/011-PtHangz2.inlined.endorsement"
                              },
                              "slot": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535
                              }
                            },
                            "required": [
                              "slot",
                              "endorsement",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Double_endorsement_evidence",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "double_endorsement_evidence"
                                ]
                              },
                              "op1": {
                                "$ref": "#/definitions/011-PtHangz2.inlined.endorsement"
                              },
                              "op2": {
                                "$ref": "#/definitions/011-PtHangz2.inlined.endorsement"
                              },
                              "slot": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535
                              }
                            },
                            "required": [
                              "slot",
                              "op2",
                              "op1",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Double_baking_evidence",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "double_baking_evidence"
                                ]
                              },
                              "bh1": {
                                "$ref": "#/definitions/011-PtHangz2.block_header.alpha.full_header"
                              },
                              "bh2": {
                                "$ref": "#/definitions/011-PtHangz2.block_header.alpha.full_header"
                              }
                            },
                            "required": [
                              "bh2",
                              "bh1",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Activate_account",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "activate_account"
                                ]
                              },
                              "pkh": {
                                "$ref": "#/definitions/Ed25519.Public_key_hash"
                              },
                              "secret": {
                                "type": "string",
                                "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                              }
                            },
                            "required": [
                              "secret",
                              "pkh",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Proposals",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "proposals"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "period": {
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "proposals": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/definitions/Protocol_hash"
                                }
                              }
                            },
                            "required": [
                              "proposals",
                              "period",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Ballot",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "ballot"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "period": {
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "proposal": {
                                "$ref": "#/definitions/Protocol_hash"
                              },
                              "ballot": {
                                "type": "string",
                                "enum": [
                                  "nay",
                                  "yay",
                                  "pass"
                                ]
                              }
                            },
                            "required": [
                              "ballot",
                              "proposal",
                              "period",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Reveal",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "reveal"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "fee": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "counter": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "gas_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "storage_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "public_key": {
                                "$ref": "#/definitions/Signature.Public_key"
                              }
                            },
                            "required": [
                              "public_key",
                              "storage_limit",
                              "gas_limit",
                              "counter",
                              "fee",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Transaction",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "transaction"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "fee": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "counter": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "gas_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "storage_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "amount": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "destination": {
                                "$ref": "#/definitions/011-PtHangz2.contract_id"
                              },
                              "parameters": {
                                "type": "object",
                                "properties": {
                                  "entrypoint": {
                                    "$ref": "#/definitions/011-PtHangz2.entrypoint"
                                  },
                                  "value": {
                                    "oneOf": [
                                      {
                                        "title": "Int",
                                        "type": "object",
                                        "properties": {
                                          "int": {
                                            "$ref": "#/definitions/bignum"
                                          }
                                        },
                                        "required": [
                                          "int"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "title": "String",
                                        "type": "object",
                                        "properties": {
                                          "string": {
                                            "$ref": "#/definitions/unistring"
                                          }
                                        },
                                        "required": [
                                          "string"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "title": "Bytes",
                                        "type": "object",
                                        "properties": {
                                          "bytes": {
                                            "type": "string",
                                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                                          }
                                        },
                                        "required": [
                                          "bytes"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "title": "Sequence",
                                        "type": "array",
                                        "items": {
                                          "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                        }
                                      },
                                      {
                                        "title": "Prim__generic",
                                        "description": "Generic primitive (any number of args with or without annotations)",
                                        "type": "object",
                                        "properties": {
                                          "prim": {
                                            "$ref": "#/definitions/011-PtHangz2.michelson.v1.primitives"
                                          },
                                          "args": {
                                            "type": "array",
                                            "items": {
                                              "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                            }
                                          },
                                          "annots": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "required": [
                                          "prim"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "value",
                                  "entrypoint"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "destination",
                              "amount",
                              "storage_limit",
                              "gas_limit",
                              "counter",
                              "fee",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Origination",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "origination"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "fee": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "counter": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "gas_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "storage_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "balance": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "delegate": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "script": {
                                "$ref": "#/definitions/011-PtHangz2.scripted.contracts"
                              }
                            },
                            "required": [
                              "script",
                              "balance",
                              "storage_limit",
                              "gas_limit",
                              "counter",
                              "fee",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Delegation",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "delegation"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "fee": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "counter": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "gas_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "storage_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "delegate": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              }
                            },
                            "required": [
                              "storage_limit",
                              "gas_limit",
                              "counter",
                              "fee",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Failing_noop",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "failing_noop"
                                ]
                              },
                              "arbitrary": {
                                "$ref": "#/definitions/unistring"
                              }
                            },
                            "required": [
                              "arbitrary",
                              "kind"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Register_global_constant",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "register_global_constant"
                                ]
                              },
                              "source": {
                                "$ref": "#/definitions/Signature.Public_key_hash"
                              },
                              "fee": {
                                "$ref": "#/definitions/011-PtHangz2.mutez"
                              },
                              "counter": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "gas_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "storage_limit": {
                                "$ref": "#/definitions/positive_bignum"
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "title": "Int",
                                    "type": "object",
                                    "properties": {
                                      "int": {
                                        "$ref": "#/definitions/bignum"
                                      }
                                    },
                                    "required": [
                                      "int"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "title": "String",
                                    "type": "object",
                                    "properties": {
                                      "string": {
                                        "$ref": "#/definitions/unistring"
                                      }
                                    },
                                    "required": [
                                      "string"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "title": "Bytes",
                                    "type": "object",
                                    "properties": {
                                      "bytes": {
                                        "type": "string",
                                        "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                                      }
                                    },
                                    "required": [
                                      "bytes"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "title": "Sequence",
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                    }
                                  },
                                  {
                                    "title": "Prim__generic",
                                    "description": "Generic primitive (any number of args with or without annotations)",
                                    "type": "object",
                                    "properties": {
                                      "prim": {
                                        "$ref": "#/definitions/011-PtHangz2.michelson.v1.primitives"
                                      },
                                      "args": {
                                        "type": "array",
                                        "items": {
                                          "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                        }
                                      },
                                      "annots": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "prim"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "required": [
                              "value",
                              "storage_limit",
                              "gas_limit",
                              "counter",
                              "fee",
                              "source",
                              "kind"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "011-PtHangz2.scripted.contracts": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "oneOf": [
                              {
                                "title": "Int",
                                "type": "object",
                                "properties": {
                                  "int": {
                                    "$ref": "#/definitions/bignum"
                                  }
                                },
                                "required": [
                                  "int"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "String",
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "$ref": "#/definitions/unistring"
                                  }
                                },
                                "required": [
                                  "string"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "Bytes",
                                "type": "object",
                                "properties": {
                                  "bytes": {
                                    "type": "string",
                                    "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                                  }
                                },
                                "required": [
                                  "bytes"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "Sequence",
                                "type": "array",
                                "items": {
                                  "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                }
                              },
                              {
                                "title": "Prim__generic",
                                "description": "Generic primitive (any number of args with or without annotations)",
                                "type": "object",
                                "properties": {
                                  "prim": {
                                    "$ref": "#/definitions/011-PtHangz2.michelson.v1.primitives"
                                  },
                                  "args": {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                    }
                                  },
                                  "annots": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "prim"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          },
                          "storage": {
                            "oneOf": [
                              {
                                "title": "Int",
                                "type": "object",
                                "properties": {
                                  "int": {
                                    "$ref": "#/definitions/bignum"
                                  }
                                },
                                "required": [
                                  "int"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "String",
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "$ref": "#/definitions/unistring"
                                  }
                                },
                                "required": [
                                  "string"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "Bytes",
                                "type": "object",
                                "properties": {
                                  "bytes": {
                                    "type": "string",
                                    "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                                  }
                                },
                                "required": [
                                  "bytes"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "Sequence",
                                "type": "array",
                                "items": {
                                  "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                }
                              },
                              {
                                "title": "Prim__generic",
                                "description": "Generic primitive (any number of args with or without annotations)",
                                "type": "object",
                                "properties": {
                                  "prim": {
                                    "$ref": "#/definitions/011-PtHangz2.michelson.v1.primitives"
                                  },
                                  "args": {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                    }
                                  },
                                  "annots": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "prim"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          }
                        },
                        "required": [
                          "storage",
                          "code"
                        ],
                        "additionalProperties": false
                      },
                      "Context_hash": {
                        "title": "A hash of context (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Ed25519.Public_key_hash": {
                        "title": "An Ed25519 public key hash (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Operation_hash": {
                        "title": "A Tezos operation ID (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Operation_list_list_hash": {
                        "title": "A list of list of operations (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Protocol_hash": {
                        "title": "A Tezos protocol ID (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Signature": {
                        "title": "A Ed25519, Secp256k1 or P256 signature (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Signature.Public_key": {
                        "title": "A Ed25519, Secp256k1, or P256 public key (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "Signature.Public_key_hash": {
                        "title": "A Ed25519, Secp256k1, or P256 public key hash (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "bignum": {
                        "title": "Big number",
                        "description": "Decimal representation of a big number",
                        "type": "string"
                      },
                      "block_hash": {
                        "title": "A block identifier (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "cycle_nonce": {
                        "title": "A nonce hash (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "error": {
                        "description": "The full list of errors is available with the global RPC `GET errors`"
                      },
                      "fitness": {
                        "title": "Block fitness",
                        "description": "The fitness, or score, of a block, that allow the Tezos to decide which chain is the best. A fitness value is a list of byte sequences. They are compared as follows: shortest lists are smaller; lists of the same length are compared according to the lexicographical order.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                        }
                      },
                      "micheline.011-PtHangz2.michelson_v1.expression": {
                        "oneOf": [
                          {
                            "title": "Int",
                            "type": "object",
                            "properties": {
                              "int": {
                                "$ref": "#/definitions/bignum"
                              }
                            },
                            "required": [
                              "int"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "String",
                            "type": "object",
                            "properties": {
                              "string": {
                                "$ref": "#/definitions/unistring"
                              }
                            },
                            "required": [
                              "string"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Bytes",
                            "type": "object",
                            "properties": {
                              "bytes": {
                                "type": "string",
                                "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$"
                              }
                            },
                            "required": [
                              "bytes"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "Sequence",
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                            }
                          },
                          {
                            "title": "Prim__generic",
                            "description": "Generic primitive (any number of args with or without annotations)",
                            "type": "object",
                            "properties": {
                              "prim": {
                                "$ref": "#/definitions/011-PtHangz2.michelson.v1.primitives"
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/definitions/micheline.011-PtHangz2.michelson_v1.expression"
                                }
                              },
                              "annots": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "prim"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "next_operation": {
                        "description": "An operation's shell header.",
                        "type": "object",
                        "properties": {
                          "protocol": {
                            "type": "string",
                            "enum": [
                              "PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx"
                            ]
                          },
                          "branch": {
                            "$ref": "#/definitions/block_hash"
                          },
                          "contents": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/011-PtHangz2.operation.alpha.contents"
                            }
                          },
                          "signature": {
                            "$ref": "#/definitions/Signature"
                          }
                        },
                        "required": [
                          "signature",
                          "contents",
                          "branch",
                          "protocol"
                        ],
                        "additionalProperties": false
                      },
                      "positive_bignum": {
                        "title": "Positive big number",
                        "description": "Decimal representation of a positive big number",
                        "type": "string"
                      },
                      "timestamp.protocol": {
                        "description": "A timestamp as seen by the protocol: second-level precision, epoch based.",
                        "$ref": "#/definitions/unistring"
                      },
                      "unistring": {
                        "title": "Universal string representation",
                        "description": "Either a plain UTF8 string, or a sequence of bytes for strings that contain invalid byte sequences.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "invalid_utf8_string": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 255
                                }
                              }
                            },
                            "required": [
                              "invalid_utf8_string"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "layout": {
                            "name": "X_0",
                            "kind": "Ref"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "kind": "Dynamic"
                          }
                        }
                      ]
                    },
                    "fields": [
                      {
                        "description": {
                          "title": "X_0"
                        },
                        "encoding": {
                          "tag_size": "Uint8",
                          "kind": {
                            "kind": "Dynamic"
                          },
                          "cases": []
                        }
                      }
                    ]
                  }
                },
                "error": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "$ref": "#/definitions/error",
                    "definitions": {
                      "error": {
                        "description": "The full list of errors is available with the global RPC `GET errors`"
                      }
                    }
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "kind": "dyn",
                          "num_fields": 1,
                          "size": "Uint30"
                        },
                        {
                          "layout": {
                            "kind": "String"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "kind": "Variable"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                }
              }
            }
          }
        },
        {
          "name": "request_operations",
          "tree": {
            "static": {
              "post_service": {
                "meth": "POST",
                "path": [
                  "request_operations"
                ],
                "description": "Request the operations of our peers or a specific peer if specified via a query parameter.",
                "query": [
                  {
                    "name": "peer_id",
                    "kind": {
                      "optional": {
                        "id": "single",
                        "name": "peer_id",
                        "descr": "A cryptographic node identity (Base58Check-encoded)"
                      }
                    }
                  }
                ],
                "input": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "layout": {
                            "kind": "Zero_width"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "size": 0,
                            "kind": "Float"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                },
                "output": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "layout": {
                            "kind": "Zero_width"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "size": 0,
                            "kind": "Float"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                },
                "error": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "$ref": "#/definitions/error",
                    "definitions": {
                      "error": {
                        "description": "The full list of errors is available with the global RPC `GET errors`"
                      }
                    }
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "kind": "dyn",
                          "num_fields": 1,
                          "size": "Uint30"
                        },
                        {
                          "layout": {
                            "kind": "String"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "kind": "Variable"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                }
              }
            }
          }
        },
        {
          "name": "unban_all_operations",
          "tree": {
            "static": {
              "post_service": {
                "meth": "POST",
                "path": [
                  "unban_all_operations"
                ],
                "description": "Clear the set of banned operations.",
                "query": [],
                "input": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "layout": {
                            "kind": "Zero_width"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "size": 0,
                            "kind": "Float"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                },
                "output": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#"
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "layout": {
                            "kind": "Zero_width"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "size": 0,
                            "kind": "Float"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                },
                "error": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "$ref": "#/definitions/error",
                    "definitions": {
                      "error": {
                        "description": "The full list of errors is available with the global RPC `GET errors`"
                      }
                    }
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "kind": "dyn",
                          "num_fields": 1,
                          "size": "Uint30"
                        },
                        {
                          "layout": {
                            "kind": "String"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "kind": "Variable"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                }
              }
            }
          }
        },
        {
          "name": "unban_operation",
          "tree": {
            "static": {
              "post_service": {
                "meth": "POST",
                "path": [
                  "unban_operation"
                ],
                "description": "Remove an operation from the set of banned operations (nothing happens if it was not banned).",
                "query": [],
                "input": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "$ref": "#/definitions/Operation_hash",
                    "definitions": {
                      "Operation_hash": {
                        "title": "A Tezos operation ID (Base58Check-encoded)",
                        "$ref": "#/definitions/unistring"
                      },
                      "unistring": {
                        "title": "Universal string representation",
                        "description": "Either a plain UTF8 string, or a sequence of bytes for strings that contain invalid byte sequences.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "invalid_utf8_string": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 255
                                }
                              }
                            },
                            "required": [
                              "invalid_utf8_string"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "name": "Operation_hash",
                          "layout": {
                            "kind": "Bytes"
                          },
                          "data_kind": {
                            "size": 32,
                            "kind": "Float"
                          },
                          "kind": "named"
                        }
                      ]
                    },
                    "fields": []
                  }
                },
                "output": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#"
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "layout": {
                            "kind": "Zero_width"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "size": 0,
                            "kind": "Float"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                },
                "error": {
                  "json_schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "$ref": "#/definitions/error",
                    "definitions": {
                      "error": {
                        "description": "The full list of errors is available with the global RPC `GET errors`"
                      }
                    }
                  },
                  "binary_schema": {
                    "toplevel": {
                      "fields": [
                        {
                          "kind": "dyn",
                          "num_fields": 1,
                          "size": "Uint30"
                        },
                        {
                          "layout": {
                            "kind": "String"
                          },
                          "kind": "anon",
                          "data_kind": {
                            "kind": "Variable"
                          }
                        }
                      ]
                    },
                    "fields": []
                  }
                }
              }
            }
          }
        }
      ]
    }
  }
}
