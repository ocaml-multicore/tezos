tests_alpha/test_contract.py::TestTypecheck::test_typecheck[opcodes/slices.tz]

Well typed
Gas remaining: 1039935.257 units remaining
{ parameter (pair bytes signature) ;
  storage key ;
  code { DUP
         /* [ pair (pair bytes signature) key : pair (pair bytes signature) key ] */ ;
         CAAR ;
         DUP
         /* [ bytes : bytes : pair (pair bytes signature) key ] */ ;
         SIZE
         /* [ nat : bytes : pair (pair bytes signature) key ] */ ;
         PUSH nat 128
         /* [ nat : nat : bytes : pair (pair bytes signature) key ] */ ;
         SWAP
         /* [ nat : nat : bytes : pair (pair bytes signature) key ] */ ;
         SUB
         /* [ int : bytes : pair (pair bytes signature) key ] */ ;
         ISNAT
         /* [ option nat : bytes : pair (pair bytes signature) key ] */ ;
         IF_SOME { /* [ nat : bytes : pair (pair bytes signature) key ] */ } { FAIL } ;
         PUSH nat 128
         /* [ nat : nat : bytes : pair (pair bytes signature) key ] */ ;
         SLICE @payload
         /* [ option bytes : pair (pair bytes signature) key ] */ ;
         ASSERT_SOME ;
         DUP
         /* [ bytes : bytes : pair (pair bytes signature) key ] */ ;
         DIP { DIP { DUP
                     /* [ pair (pair bytes signature) key : pair (pair bytes signature) key ] */ ;
                     CAAR ;
                     PUSH nat 32
                     /* [ nat : bytes : pair (pair bytes signature) key ] */ ;
                     PUSH nat 0
                     /* [ nat : nat : bytes : pair (pair bytes signature) key ] */ ;
                     SLICE
                     /* [ option bytes : pair (pair bytes signature) key ] */ ;
                     ASSERT_SOME }
               /* [ bytes : bytes : pair (pair bytes signature) key ] */ ;
               SHA256
               /* [ bytes : bytes : pair (pair bytes signature) key ] */ ;
               ASSERT_CMPEQ }
         /* [ bytes : pair (pair bytes signature) key ] */ ;
         DUP
         /* [ bytes : bytes : pair (pair bytes signature) key ] */ ;
         DIP { DIP { DUP
                     /* [ pair (pair bytes signature) key : pair (pair bytes signature) key ] */ ;
                     CAAR ;
                     PUSH nat 32
                     /* [ nat : bytes : pair (pair bytes signature) key ] */ ;
                     PUSH nat 32
                     /* [ nat : nat : bytes : pair (pair bytes signature) key ] */ ;
                     SLICE
                     /* [ option bytes : pair (pair bytes signature) key ] */ ;
                     ASSERT_SOME }
               /* [ bytes : bytes : pair (pair bytes signature) key ] */ ;
               BLAKE2B
               /* [ bytes : bytes : pair (pair bytes signature) key ] */ ;
               ASSERT_CMPEQ }
         /* [ bytes : pair (pair bytes signature) key ] */ ;
         DUP
         /* [ bytes : bytes : pair (pair bytes signature) key ] */ ;
         DIP { DIP { DUP
                     /* [ pair (pair bytes signature) key : pair (pair bytes signature) key ] */ ;
                     CAAR ;
                     PUSH nat 64
                     /* [ nat : bytes : pair (pair bytes signature) key ] */ ;
                     PUSH nat 64
                     /* [ nat : nat : bytes : pair (pair bytes signature) key ] */ ;
                     SLICE
                     /* [ option bytes : pair (pair bytes signature) key ] */ ;
                     ASSERT_SOME }
               /* [ bytes : bytes : pair (pair bytes signature) key ] */ ;
               SHA512
               /* [ bytes : bytes : pair (pair bytes signature) key ] */ ;
               ASSERT_CMPEQ }
         /* [ bytes : pair (pair bytes signature) key ] */ ;
         DIP { DUP
               /* [ pair (pair bytes signature) key : pair (pair bytes signature) key ] */ ;
               CDR
               /* [ key : pair (pair bytes signature) key ] */ ;
               DIP { DUP
                     /* [ pair (pair bytes signature) key : pair (pair bytes signature) key ] */ ;
                     CADR }
               /* [ key : signature : pair (pair bytes signature) key ] */ }
         /* [ bytes : key : signature : pair (pair bytes signature) key ] */ ;
         SWAP
         /* [ key : bytes : signature : pair (pair bytes signature) key ] */ ;
         DIP { SWAP /* [ signature : bytes : pair (pair bytes signature) key ] */ }
         /* [ key : signature : bytes : pair (pair bytes signature) key ] */ ;
         CHECK_SIGNATURE
         /* [ bool : pair (pair bytes signature) key ] */ ;
         ASSERT ;
         CDR
         /* [ key ] */ ;
         DUP
         /* [ key : key ] */ ;
         HASH_KEY
         /* [ key_hash : key ] */ ;
         IMPLICIT_ACCOUNT
         /* [ contract unit : key ] */ ;
         BALANCE
         /* [ mutez : contract unit : key ] */ ;
         UNIT
         /* [ unit : mutez : contract unit : key ] */ ;
         TRANSFER_TOKENS
         /* [ operation : key ] */ ;
         NIL operation
         /* [ list operation : operation : key ] */ ;
         SWAP
         /* [ operation : list operation : key ] */ ;
         CONS
         /* [ list operation : key ] */ ;
         PAIR
         /* [ pair (list operation) key ] */ } }
