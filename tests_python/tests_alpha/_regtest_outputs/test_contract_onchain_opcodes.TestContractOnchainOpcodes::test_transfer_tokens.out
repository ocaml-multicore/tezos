tests_alpha/test_contract_onchain_opcodes.py::TestContractOnchainOpcodes::test_transfer_tokens

Node is bootstrapped.
Estimated gas: 1404.650 units (will add 100 for safety)
Estimated storage: 295 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 5 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000419
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 1505
    Storage limit: 315 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.000419
      fees(the baker who will include this operation,1) ... +ꜩ0.000419
    Origination:
      From: [CONTRACT_HASH]
      Credit: ꜩ100
      Script:
        { parameter unit ; storage unit ; code { CDR ; NIL operation ; PAIR } }
        Initial storage: Unit
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 38 bytes
        Paid storage size diff: 38 bytes
        Consumed gas: 1404.650
        Balance updates:
          [CONTRACT_HASH] ... -ꜩ0.0095
          [CONTRACT_HASH] ... -ꜩ0.06425
          [CONTRACT_HASH] ... -ꜩ100
          [CONTRACT_HASH] ... +ꜩ100

New contract [CONTRACT_HASH] originated.
Contract memorized as test_transfer_account1.
Injected block [BLOCK_HASH]
Node is bootstrapped.
Estimated gas: 1404.650 units (will add 100 for safety)
Estimated storage: 295 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 5 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000419
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 1505
    Storage limit: 315 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.000419
      fees(the baker who will include this operation,1) ... +ꜩ0.000419
    Origination:
      From: [CONTRACT_HASH]
      Credit: ꜩ20
      Script:
        { parameter unit ; storage unit ; code { CDR ; NIL operation ; PAIR } }
        Initial storage: Unit
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 38 bytes
        Paid storage size diff: 38 bytes
        Consumed gas: 1404.650
        Balance updates:
          [CONTRACT_HASH] ... -ꜩ0.0095
          [CONTRACT_HASH] ... -ꜩ0.06425
          [CONTRACT_HASH] ... -ꜩ20
          [CONTRACT_HASH] ... +ꜩ20

New contract [CONTRACT_HASH] originated.
Contract memorized as test_transfer_account2.
Injected block [BLOCK_HASH]
Node is bootstrapped.
Estimated gas: 1410.299 units (will add 100 for safety)
Estimated storage: 323 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 5 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000449
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 1511
    Storage limit: 343 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.000449
      fees(the baker who will include this operation,1) ... +ꜩ0.000449
    Origination:
      From: [CONTRACT_HASH]
      Credit: ꜩ1000
      Script:
        { parameter (contract unit) ;
          storage unit ;
          code { CAR ;
                 DIP { UNIT } ;
                 PUSH mutez 100000000 ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 NIL operation ;
                 SWAP ;
                 CONS ;
                 PAIR } }
        Initial storage: Unit
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 66 bytes
        Paid storage size diff: 66 bytes
        Consumed gas: 1410.299
        Balance updates:
          [CONTRACT_HASH] ... -ꜩ0.0165
          [CONTRACT_HASH] ... -ꜩ0.06425
          [CONTRACT_HASH] ... -ꜩ1000
          [CONTRACT_HASH] ... +ꜩ1000

New contract [CONTRACT_HASH] originated.
Contract memorized as transfer_tokens.
Injected block [BLOCK_HASH]
100 ꜩ
[CONTRACT_HASH]

Node is bootstrapped.
Estimated gas: 4580.206 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 5 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000766
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 4681
    Storage limit: 0 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.000766
      fees(the baker who will include this operation,1) ... +ꜩ0.000766
    Transaction:
      Amount: ꜩ100
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      Parameter: "[CONTRACT_HASH]"
      This transaction was successfully applied
      Updated storage: Unit
      Storage size: 66 bytes
      Consumed gas: 2531.532
      Balance updates:
        [CONTRACT_HASH] ... -ꜩ100
        [CONTRACT_HASH] ... +ꜩ100
    Internal operations:
      Transaction:
        Amount: ꜩ100
        From: [CONTRACT_HASH]
        To: [CONTRACT_HASH]
        This transaction was successfully applied
        Updated storage: Unit
        Storage size: 38 bytes
        Consumed gas: 2048.674
        Balance updates:
          [CONTRACT_HASH] ... -ꜩ100
          [CONTRACT_HASH] ... +ꜩ100

Injected block [BLOCK_HASH]
200 ꜩ
[CONTRACT_HASH]

Node is bootstrapped.
Estimated gas: 3727.089 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 5 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.00068
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 3828
    Storage limit: 0 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.00068
      fees(the baker who will include this operation,1) ... +ꜩ0.00068
    Transaction:
      Amount: ꜩ100
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      Parameter: "[CONTRACT_HASH]"
      This transaction was successfully applied
      Updated storage: Unit
      Storage size: 66 bytes
      Consumed gas: 1678.415
      Balance updates:
        [CONTRACT_HASH] ... -ꜩ100
        [CONTRACT_HASH] ... +ꜩ100
    Internal operations:
      Transaction:
        Amount: ꜩ100
        From: [CONTRACT_HASH]
        To: [CONTRACT_HASH]
        This transaction was successfully applied
        Updated storage: Unit
        Storage size: 38 bytes
        Consumed gas: 2048.674
        Balance updates:
          [CONTRACT_HASH] ... -ꜩ100
          [CONTRACT_HASH] ... +ꜩ100

Injected block [BLOCK_HASH]
120 ꜩ
