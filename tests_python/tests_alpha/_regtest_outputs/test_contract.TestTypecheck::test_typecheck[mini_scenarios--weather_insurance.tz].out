tests_alpha/test_contract.py::TestTypecheck::test_typecheck[mini_scenarios/weather_insurance.tz]

Well typed
Gas remaining: 1039960.200 units remaining
{ parameter (pair (signature %signed_weather_data) (nat :rain %actual_level)) ;
  storage
    (pair (pair (address %under_key) (address %over_key))
          (pair (nat :rain %rain_level) (key %weather_service_key))) ;
  code { DUP
         /* [ pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         DUP
         /* [ pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         CAR
         /* [ pair (signature %signed_weather_data) (nat %actual_level)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         MAP_CDR
           { PACK
             /* [ bytes : pair (signature %signed_weather_data) (nat %actual_level)
                : pair (pair (signature %signed_weather_data) (nat %actual_level))
                     (pair (address %under_key) (address %over_key))
                     (nat %rain_level)
                     (key %weather_service_key)
                : pair (pair (signature %signed_weather_data) (nat %actual_level))
                     (pair (address %under_key) (address %over_key))
                     (nat %rain_level)
                     (key %weather_service_key) ] */ ;
             BLAKE2B
             /* [ bytes : pair (signature %signed_weather_data) (nat %actual_level)
                : pair (pair (signature %signed_weather_data) (nat %actual_level))
                     (pair (address %under_key) (address %over_key))
                     (nat %rain_level)
                     (key %weather_service_key)
                : pair (pair (signature %signed_weather_data) (nat %actual_level))
                     (pair (address %under_key) (address %over_key))
                     (nat %rain_level)
                     (key %weather_service_key) ] */ } ;
         SWAP
         /* [ pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) : pair signature bytes
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         CDDDR %weather_service_key ;
         DIP { UNPAIR
               /* [ signature : bytes
                  : pair (pair (signature %signed_weather_data) (nat %actual_level))
                       (pair (address %under_key) (address %over_key))
                       (nat %rain_level)
                       (key %weather_service_key) ] */ }
         /* [ key : signature : bytes
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         CHECK_SIGNATURE @sigok
         /* [ bool
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         ASSERT ;
         DUP
         /* [ pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         DUP
         /* [ pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         DUP
         /* [ pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         DIIIP
           { CDR %storage
             /* [ pair (pair (address %under_key) (address %over_key))
                     (nat %rain_level)
                     (key %weather_service_key) ] */ }
         /* [ pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         DIIP { CDAR }
         /* [ pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key)
            : pair (address %under_key) (address %over_key)
            : pair (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         DIP { CADR %actual_level }
         /* [ pair (pair (signature %signed_weather_data) (nat %actual_level))
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) : nat
            : pair (address %under_key) (address %over_key)
            : pair (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         CDDAR %rain_level ;
         CMPLT ;
         IF { CAR %under_key
              /* [ address
                 : pair (pair (address %under_key) (address %over_key))
                      (nat %rain_level)
                      (key %weather_service_key) ] */ }
            { CDR %over_key
              /* [ address
                 : pair (pair (address %under_key) (address %over_key))
                      (nat %rain_level)
                      (key %weather_service_key) ] */ } ;
         CONTRACT
           unit
         /* [ option (contract unit)
            : pair (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         ASSERT_SOME ;
         BALANCE
         /* [ mutez : contract unit
            : pair (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         UNIT
         /* [ unit : mutez : contract unit
            : pair (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         TRANSFER_TOKENS @trans.op
         /* [ operation
            : pair (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         NIL operation
         /* [ list operation : operation
            : pair (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         SWAP
         /* [ operation : list operation
            : pair (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         CONS
         /* [ list operation
            : pair (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ ;
         PAIR
         /* [ pair (list operation)
                 (pair (address %under_key) (address %over_key))
                 (nat %rain_level)
                 (key %weather_service_key) ] */ } }
