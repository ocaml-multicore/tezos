tests_alpha/test_contract.py::TestTypecheck::test_typecheck[mini_scenarios/ticket_wallet_non_fungible.tz]

Well typed
Gas remaining: 1039952.622 units remaining
{ parameter
    (or (ticket %receive nat)
        (pair %send (contract %destination (ticket nat)) (address %ticketer) (nat %id))) ;
  storage (pair (address %manager) (big_map %tickets (pair address nat) (ticket nat))) ;
  code { AMOUNT
         /* [ mutez
            : pair (or (ticket %receive nat)
                     (pair %send (contract %destination (ticket nat)) (address %ticketer) (nat %id)))
                 (address %manager)
                 (big_map %tickets (pair address nat) (ticket nat)) ] */ ;
         PUSH mutez
              0
         /* [ mutez : mutez
            : pair (or (ticket %receive nat)
                     (pair %send (contract %destination (ticket nat)) (address %ticketer) (nat %id)))
                 (address %manager)
                 (big_map %tickets (pair address nat) (ticket nat)) ] */ ;
         ASSERT_CMPEQ ;
         UNPAIR
           3
         /* [ or (ticket %receive nat)
               (pair %send (contract %destination (ticket nat)) (address %ticketer) (nat %id))
            : address : big_map (pair address nat) (ticket nat) ] */ ;
         IF_LEFT
           { READ_TICKET
             /* [ pair address nat nat : ticket nat : address
                : big_map (pair address nat) (ticket nat) ] */ ;
             CAST (pair (address %ticketer) (nat %id) (nat %amount))
             /* [ pair (address %ticketer) (nat %id) (nat %amount) : ticket nat : address
                : big_map (pair address nat) (ticket nat) ] */ ;
             UNPAIR
               3
             /* [ address : nat : nat : ticket nat : address
                : big_map (pair address nat) (ticket nat) ] */ ;
             DIG 2
             /* [ nat : address : nat : ticket nat : address
                : big_map (pair address nat) (ticket nat) ] */ ;
             PUSH nat
                  1
             /* [ nat : nat : address : nat : ticket nat : address
                : big_map (pair address nat) (ticket nat) ] */ ;
             ASSERT_CMPEQ ;
             PAIR
             /* [ pair address nat : ticket nat : address
                : big_map (pair address nat) (ticket nat) ] */ ;
             DIP { SOME
                   /* [ option (ticket nat) : address : big_map (pair address nat) (ticket nat) ] */ ;
                   DIP { SWAP /* [ big_map (pair address nat) (ticket nat) : address ] */ }
                   /* [ option (ticket nat) : big_map (pair address nat) (ticket nat) : address ] */ }
             /* [ pair address nat : option (ticket nat)
                : big_map (pair address nat) (ticket nat) : address ] */ ;
             GET_AND_UPDATE
             /* [ option (ticket nat) : big_map (pair address nat) (ticket nat) : address ] */ ;
             ASSERT_NONE ;
             SWAP
             /* [ address : big_map (pair address nat) (ticket nat) ] */ ;
             PAIR
             /* [ pair address (big_map (pair address nat) (ticket nat)) ] */ ;
             NIL operation
             /* [ list operation : pair address (big_map (pair address nat) (ticket nat)) ] */ }
           { DUP @manager
               2
             /* [ address
                : pair (contract %destination (ticket nat)) (address %ticketer) (nat %id)
                : address : big_map (pair address nat) (ticket nat) ] */ ;
             SENDER
             /* [ address : address
                : pair (contract %destination (ticket nat)) (address %ticketer) (nat %id)
                : address : big_map (pair address nat) (ticket nat) ] */ ;
             ASSERT_CMPEQ ;
             UNPAIR
             /* [ contract (ticket nat) : pair (address %ticketer) (nat %id) : address
                : big_map (pair address nat) (ticket nat) ] */ ;
             DIG 3
             /* [ big_map (pair address nat) (ticket nat) : contract (ticket nat)
                : pair (address %ticketer) (nat %id) : address ] */ ;
             NONE (ticket nat)
             /* [ option (ticket nat) : big_map (pair address nat) (ticket nat)
                : contract (ticket nat) : pair (address %ticketer) (nat %id) : address ] */ ;
             DIG 3
             /* [ pair (address %ticketer) (nat %id) : option (ticket nat)
                : big_map (pair address nat) (ticket nat) : contract (ticket nat) : address ] */ ;
             GET_AND_UPDATE
             /* [ option (ticket nat) : big_map (pair address nat) (ticket nat)
                : contract (ticket nat) : address ] */ ;
             ASSERT_SOME ;
             SWAP
             /* [ big_map (pair address nat) (ticket nat) : ticket nat
                : contract (ticket nat) : address ] */ ;
             DIG 3
             /* [ address : big_map (pair address nat) (ticket nat) : ticket nat
                : contract (ticket nat) ] */ ;
             PAIR
             /* [ pair address (big_map (pair address nat) (ticket nat)) : ticket nat
                : contract (ticket nat) ] */ ;
             DUG 2
             /* [ ticket nat : contract (ticket nat)
                : pair address (big_map (pair address nat) (ticket nat)) ] */ ;
             PUSH mutez
                  0
             /* [ mutez : ticket nat : contract (ticket nat)
                : pair address (big_map (pair address nat) (ticket nat)) ] */ ;
             SWAP
             /* [ ticket nat : mutez : contract (ticket nat)
                : pair address (big_map (pair address nat) (ticket nat)) ] */ ;
             TRANSFER_TOKENS
             /* [ operation : pair address (big_map (pair address nat) (ticket nat)) ] */ ;
             NIL operation
             /* [ list operation : operation
                : pair address (big_map (pair address nat) (ticket nat)) ] */ ;
             SWAP
             /* [ operation : list operation
                : pair address (big_map (pair address nat) (ticket nat)) ] */ ;
             CONS
             /* [ list operation : pair address (big_map (pair address nat) (ticket nat)) ] */ } ;
         PAIR
         /* [ pair (list operation) address (big_map (pair address nat) (ticket nat)) ] */ } }
