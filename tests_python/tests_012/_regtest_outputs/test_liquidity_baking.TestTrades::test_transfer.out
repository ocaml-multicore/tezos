tests_012/test_liquidity_baking.py::TestTrades::test_transfer

Node is bootstrapped.
Estimated gas: 3679.110 units (will add 100 for safety)
Estimated storage: 68 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000735
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 3780
    Storage limit: 88 bytes
    Balance updates:
      [CONTRACT_HASH] ... -ꜩ0.000735
      payload fees(the block proposer) ....... +ꜩ0.000735
    Transaction:
      Amount: ꜩ0
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      Entrypoint: transfer
      Parameter: (Pair "[CONTRACT_HASH]"
                       "[CONTRACT_HASH]"
                       100)
      This transaction was successfully applied
      Updated storage:
        { 0 ; 1 ; 0x000002298c03ed7d454a101eb7022bc95f7e5f41ac78 ; 100010000 }
      Updated big_maps:
        Set map(0)[0x0000dac9f52543da1aed0bc1d6b46bf7c10db7014cd6] to 100
        Set map(0)[0x0000e7670f32038107a59a2b9cfefae36ea21f5aa63c] to 260
      Storage size: 2399 bytes
      Paid storage size diff: 68 bytes
      Consumed gas: 3679.110
      Balance updates:
        [CONTRACT_HASH] ... -ꜩ0.017
        storage fees ........................... +ꜩ0.017

Injected block at minimal timestamp
