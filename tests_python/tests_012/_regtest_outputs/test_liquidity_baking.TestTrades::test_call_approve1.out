tests_012/test_liquidity_baking.py::TestTrades::test_call_approve1

Node is bootstrapped.
Estimated gas: 2375.464 units (will add 100 for safety)
Estimated storage: 71 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000558
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 2476
    Storage limit: 91 bytes
    Balance updates:
      [CONTRACT_HASH] ... -ꜩ0.000558
      payload fees(the block proposer) ....... +ꜩ0.000558
    Transaction:
      Amount: ꜩ0
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      Entrypoint: approve
      Parameter: (Pair "[CONTRACT_HASH]" 1000000000)
      This transaction was successfully applied
      Updated storage:
        { 0 ; 1 ; 0x000002298c03ed7d454a101eb7022bc95f7e5f41ac78 ; 100010000 }
      Updated big_maps:
        Set map(1)[(Pair 0x000002298c03ed7d454a101eb7022bc95f7e5f41ac78
              0x01d496def47a3be89f5d54c6e6bb13cc6645d6e16600)] to 1000000000
      Storage size: 2053 bytes
      Paid storage size diff: 71 bytes
      Consumed gas: 2375.464
      Balance updates:
        [CONTRACT_HASH] ... -ꜩ0.01775
        storage fees ........................... +ꜩ0.01775

Injected block at minimal timestamp
