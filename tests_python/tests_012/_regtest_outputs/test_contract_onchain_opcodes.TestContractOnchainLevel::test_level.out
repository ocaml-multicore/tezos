tests_012/test_contract_onchain_opcodes.py::TestContractOnchainLevel::test_level

Node is bootstrapped.
Estimated gas: 1406.044 units (will add 100 for safety)
Estimated storage: 300 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000424
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 1507
    Storage limit: 320 bytes
    Balance updates:
      [CONTRACT_HASH] ... -ꜩ0.000424
      payload fees(the block proposer) ....... +ꜩ0.000424
    Origination:
      From: [CONTRACT_HASH]
      Credit: ꜩ100
      Script:
        { parameter unit ;
          storage nat ;
          code { DROP ; LEVEL ; NIL operation ; PAIR } }
        Initial storage: 9999999
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 43 bytes
        Paid storage size diff: 43 bytes
        Consumed gas: 1406.044
        Balance updates:
          [CONTRACT_HASH] ... -ꜩ0.01075
          storage fees ........................... +ꜩ0.01075
          [CONTRACT_HASH] ... -ꜩ0.06425
          storage fees ........................... +ꜩ0.06425
          [CONTRACT_HASH] ... -ꜩ100
          [CONTRACT_HASH] ... +ꜩ100

New contract [CONTRACT_HASH] originated.
Contract memorized as level.
Injected block at minimal timestamp
Injected block at minimal timestamp
Node is bootstrapped.
Estimated gas: 2049.563 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000467
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 2150
    Storage limit: 0 bytes
    Balance updates:
      [CONTRACT_HASH] ... -ꜩ0.000467
      payload fees(the block proposer) ....... +ꜩ0.000467
    Transaction:
      Amount: ꜩ500
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      This transaction was successfully applied
      Updated storage: 4
      Storage size: 40 bytes
      Consumed gas: 2049.563
      Balance updates:
        [CONTRACT_HASH] ... -ꜩ500
        [CONTRACT_HASH] ... +ꜩ500

Injected block at minimal timestamp
{ "level": [LEVEL], "proto": 1,
  "predecessor": "[BLOCK_HASH]",
  "timestamp": "[TIMESTAMP]", "validation_pass": 4,
  "operations_hash": "[OPERATION_HASH]",
  "fitness": "[FITNESS]",
  "context": "[CONTEXT]" }
4
Injected block at minimal timestamp
Injected block at minimal timestamp
4
Node is bootstrapped.
Estimated gas: 1202.350 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000383
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 1303
    Storage limit: 0 bytes
    Balance updates:
      [CONTRACT_HASH] ... -ꜩ0.000383
      payload fees(the block proposer) ....... +ꜩ0.000383
    Transaction:
      Amount: ꜩ500
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      This transaction was successfully applied
      Updated storage: 7
      Storage size: 40 bytes
      Consumed gas: 1202.350
      Balance updates:
        [CONTRACT_HASH] ... -ꜩ500
        [CONTRACT_HASH] ... +ꜩ500

Injected block at minimal timestamp
7
