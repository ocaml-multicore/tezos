tests_012/test_contract.py::TestTypecheck::test_typecheck[attic/auction.tz]

Well typed
Gas remaining: 1039972.258 units remaining
{ parameter key_hash ;
  storage (pair timestamp (pair mutez key_hash)) ;
  code { DUP
         /* [ pair (key_hash @parameter) (pair @storage timestamp mutez key_hash)
            : pair (key_hash @parameter) (pair @storage timestamp mutez key_hash) ] */ ;
         CDAR ;
         DUP
         /* [ timestamp : timestamp
            : pair (key_hash @parameter) (pair @storage timestamp mutez key_hash) ] */ ;
         NOW
         /* [ @now timestamp : timestamp : timestamp
            : pair (key_hash @parameter) (pair @storage timestamp mutez key_hash) ] */ ;
         CMPGT ;
         IF { FAIL }
            { /* [ timestamp
                 : pair (key_hash @parameter) (pair @storage timestamp mutez key_hash) ] */ } ;
         SWAP
         /* [ pair (key_hash @parameter) (pair @storage timestamp mutez key_hash)
            : timestamp ] */ ;
         DUP
         /* [ pair (key_hash @parameter) (pair @storage timestamp mutez key_hash)
            : pair (key_hash @parameter) (pair @storage timestamp mutez key_hash)
            : timestamp ] */ ;
         CAR
         /* [ @parameter key_hash
            : pair (key_hash @parameter) (pair @storage timestamp mutez key_hash)
            : timestamp ] */ ;
         DIP { CDDR }
         /* [ @parameter key_hash : pair mutez key_hash : timestamp ] */ ;
         AMOUNT
         /* [ @amount mutez : @parameter key_hash : pair mutez key_hash : timestamp ] */ ;
         PAIR
         /* [ pair (mutez @amount) (key_hash @parameter) : pair mutez key_hash
            : timestamp ] */ ;
         SWAP
         /* [ pair mutez key_hash : pair (mutez @amount) (key_hash @parameter)
            : timestamp ] */ ;
         DIP { SWAP
               /* [ timestamp : pair (mutez @amount) (key_hash @parameter) ] */ ;
               PAIR
               /* [ pair timestamp (mutez @amount) (key_hash @parameter) ] */ }
         /* [ pair mutez key_hash
            : pair timestamp (mutez @amount) (key_hash @parameter) ] */ ;
         DUP
         /* [ pair mutez key_hash : pair mutez key_hash
            : pair timestamp (mutez @amount) (key_hash @parameter) ] */ ;
         CAR
         /* [ mutez : pair mutez key_hash
            : pair timestamp (mutez @amount) (key_hash @parameter) ] */ ;
         AMOUNT
         /* [ @amount mutez : mutez : pair mutez key_hash
            : pair timestamp (mutez @amount) (key_hash @parameter) ] */ ;
         CMPLE ;
         IF { FAIL }
            { /* [ pair mutez key_hash
                 : pair timestamp (mutez @amount) (key_hash @parameter) ] */ } ;
         DUP
         /* [ pair mutez key_hash : pair mutez key_hash
            : pair timestamp (mutez @amount) (key_hash @parameter) ] */ ;
         CAR
         /* [ mutez : pair mutez key_hash
            : pair timestamp (mutez @amount) (key_hash @parameter) ] */ ;
         DIP { CDR
               /* [ key_hash : pair timestamp (mutez @amount) (key_hash @parameter) ] */ ;
               IMPLICIT_ACCOUNT
               /* [ contract unit : pair timestamp (mutez @amount) (key_hash @parameter) ] */ }
         /* [ mutez : contract unit
            : pair timestamp (mutez @amount) (key_hash @parameter) ] */ ;
         UNIT
         /* [ unit : mutez : contract unit
            : pair timestamp (mutez @amount) (key_hash @parameter) ] */ ;
         TRANSFER_TOKENS
         /* [ operation : pair timestamp (mutez @amount) (key_hash @parameter) ] */ ;
         NIL operation
         /* [ list operation : operation
            : pair timestamp (mutez @amount) (key_hash @parameter) ] */ ;
         SWAP
         /* [ operation : list operation
            : pair timestamp (mutez @amount) (key_hash @parameter) ] */ ;
         CONS
         /* [ list operation : pair timestamp (mutez @amount) (key_hash @parameter) ] */ ;
         PAIR
         /* [ pair (list operation) timestamp (mutez @amount) (key_hash @parameter) ] */ } }
