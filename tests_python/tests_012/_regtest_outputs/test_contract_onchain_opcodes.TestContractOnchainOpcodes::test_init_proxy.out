tests_012/test_contract_onchain_opcodes.py::TestContractOnchainOpcodes::test_init_proxy

Node is bootstrapped.
Estimated gas: 1409.594 units (will add 100 for safety)
Estimated storage: 312 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000437
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 1510
    Storage limit: 332 bytes
    Balance updates:
      [CONTRACT_HASH] ... -ꜩ0.000437
      payload fees(the block proposer) ....... +ꜩ0.000437
    Origination:
      From: [CONTRACT_HASH]
      Credit: ꜩ1000
      Script:
        { parameter (contract unit) ;
          storage unit ;
          code { UNPAIR ;
                 AMOUNT ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 DIP { NIL operation } ;
                 CONS ;
                 PAIR } }
        Initial storage: Unit
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 55 bytes
        Paid storage size diff: 55 bytes
        Consumed gas: 1409.594
        Balance updates:
          [CONTRACT_HASH] ... -ꜩ0.01375
          storage fees ........................... +ꜩ0.01375
          [CONTRACT_HASH] ... -ꜩ0.06425
          storage fees ........................... +ꜩ0.06425
          [CONTRACT_HASH] ... -ꜩ1000
          [CONTRACT_HASH] ... +ꜩ1000

New contract [CONTRACT_HASH] originated.
Contract memorized as proxy.
Injected block at minimal timestamp
