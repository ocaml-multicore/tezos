tests_012/test_contract.py::TestTypecheck::test_typecheck[opcodes/packunpack_rev.tz]

Well typed
Gas remaining: 1039885.614 units remaining
{ parameter (pair int nat string bytes mutez bool key_hash timestamp address) ;
  storage unit ;
  code { CAR
         /* [ @parameter pair int nat string bytes mutez bool key_hash timestamp address ] */ ;
         DUP
         /* [ @parameter pair int nat string bytes mutez bool key_hash timestamp address
            : @parameter pair int nat string bytes mutez bool key_hash timestamp address ] */ ;
         CAR
         /* [ int
            : @parameter pair int nat string bytes mutez bool key_hash timestamp address ] */ ;
         DIP { UNPAIR
               /* [ int : pair nat string bytes mutez bool key_hash timestamp address ] */ }
         /* [ int : int : pair nat string bytes mutez bool key_hash timestamp address ] */ ;
         PACK
         /* [ @packed bytes : int
            : pair nat string bytes mutez bool key_hash timestamp address ] */ ;
         UNPACK
           int
         /* [ @packed.unpacked option int : int
            : pair nat string bytes mutez bool key_hash timestamp address ] */ ;
         ASSERT_SOME ;
         ASSERT_CMPEQ ;
         DUP
         /* [ pair nat string bytes mutez bool key_hash timestamp address
            : pair nat string bytes mutez bool key_hash timestamp address ] */ ;
         CAR
         /* [ nat : pair nat string bytes mutez bool key_hash timestamp address ] */ ;
         DIP { UNPAIR /* [ nat : pair string bytes mutez bool key_hash timestamp address ] */ }
         /* [ nat : nat : pair string bytes mutez bool key_hash timestamp address ] */ ;
         PACK
         /* [ @packed bytes : nat
            : pair string bytes mutez bool key_hash timestamp address ] */ ;
         UNPACK
           nat
         /* [ @packed.unpacked option nat : nat
            : pair string bytes mutez bool key_hash timestamp address ] */ ;
         ASSERT_SOME ;
         ASSERT_CMPEQ ;
         DUP
         /* [ pair string bytes mutez bool key_hash timestamp address
            : pair string bytes mutez bool key_hash timestamp address ] */ ;
         CAR
         /* [ string : pair string bytes mutez bool key_hash timestamp address ] */ ;
         DIP { UNPAIR /* [ string : pair bytes mutez bool key_hash timestamp address ] */ }
         /* [ string : string : pair bytes mutez bool key_hash timestamp address ] */ ;
         PACK
         /* [ @packed bytes : string : pair bytes mutez bool key_hash timestamp address ] */ ;
         UNPACK
           string
         /* [ @packed.unpacked option string : string
            : pair bytes mutez bool key_hash timestamp address ] */ ;
         ASSERT_SOME ;
         ASSERT_CMPEQ ;
         DUP
         /* [ pair bytes mutez bool key_hash timestamp address
            : pair bytes mutez bool key_hash timestamp address ] */ ;
         CAR
         /* [ bytes : pair bytes mutez bool key_hash timestamp address ] */ ;
         DIP { UNPAIR /* [ bytes : pair mutez bool key_hash timestamp address ] */ }
         /* [ bytes : bytes : pair mutez bool key_hash timestamp address ] */ ;
         PACK
         /* [ @packed bytes : bytes : pair mutez bool key_hash timestamp address ] */ ;
         UNPACK
           bytes
         /* [ @packed.unpacked option bytes : bytes
            : pair mutez bool key_hash timestamp address ] */ ;
         ASSERT_SOME ;
         ASSERT_CMPEQ ;
         DUP
         /* [ pair mutez bool key_hash timestamp address
            : pair mutez bool key_hash timestamp address ] */ ;
         CAR
         /* [ mutez : pair mutez bool key_hash timestamp address ] */ ;
         DIP { UNPAIR /* [ mutez : pair bool key_hash timestamp address ] */ }
         /* [ mutez : mutez : pair bool key_hash timestamp address ] */ ;
         PACK
         /* [ @packed bytes : mutez : pair bool key_hash timestamp address ] */ ;
         UNPACK
           mutez
         /* [ @packed.unpacked option mutez : mutez
            : pair bool key_hash timestamp address ] */ ;
         ASSERT_SOME ;
         ASSERT_CMPEQ ;
         DUP
         /* [ pair bool key_hash timestamp address
            : pair bool key_hash timestamp address ] */ ;
         CAR
         /* [ bool : pair bool key_hash timestamp address ] */ ;
         DIP { UNPAIR /* [ bool : pair key_hash timestamp address ] */ }
         /* [ bool : bool : pair key_hash timestamp address ] */ ;
         PACK
         /* [ @packed bytes : bool : pair key_hash timestamp address ] */ ;
         UNPACK
           bool
         /* [ @packed.unpacked option bool : bool : pair key_hash timestamp address ] */ ;
         ASSERT_SOME ;
         ASSERT_CMPEQ ;
         DUP
         /* [ pair key_hash timestamp address : pair key_hash timestamp address ] */ ;
         CAR
         /* [ key_hash : pair key_hash timestamp address ] */ ;
         DIP { UNPAIR /* [ key_hash : pair timestamp address ] */ }
         /* [ key_hash : key_hash : pair timestamp address ] */ ;
         PACK
         /* [ @packed bytes : key_hash : pair timestamp address ] */ ;
         UNPACK
           key_hash
         /* [ @packed.unpacked option key_hash : key_hash : pair timestamp address ] */ ;
         ASSERT_SOME ;
         ASSERT_CMPEQ ;
         DUP
         /* [ pair timestamp address : pair timestamp address ] */ ;
         CAR
         /* [ timestamp : pair timestamp address ] */ ;
         DIP { UNPAIR /* [ timestamp : address ] */ }
         /* [ timestamp : timestamp : address ] */ ;
         PACK
         /* [ @packed bytes : timestamp : address ] */ ;
         UNPACK timestamp
         /* [ @packed.unpacked option timestamp : timestamp : address ] */ ;
         ASSERT_SOME ;
         ASSERT_CMPEQ ;
         DUP
         /* [ address : address ] */ ;
         PACK
         /* [ @packed bytes : address ] */ ;
         UNPACK address
         /* [ @packed.unpacked option address : address ] */ ;
         ASSERT_SOME ;
         ASSERT_CMPEQ ;
         PUSH int 0
         /* [ int ] */ ;
         PACK
         /* [ @packed bytes ] */ ;
         UNPACK nat
         /* [ @packed.unpacked option nat ] */ ;
         ASSERT_SOME ;
         DROP
         /* [] */ ;
         PUSH int -1
         /* [ int ] */ ;
         PACK
         /* [ @packed bytes ] */ ;
         UNPACK nat
         /* [ @packed.unpacked option nat ] */ ;
         ASSERT_NONE ;
         PUSH bytes 0x
         /* [ bytes ] */ ;
         UNPACK nat
         /* [ @unpacked option nat ] */ ;
         ASSERT_NONE ;
         PUSH bytes 0x04
         /* [ bytes ] */ ;
         UNPACK nat
         /* [ @unpacked option nat ] */ ;
         ASSERT_NONE ;
         PUSH bytes 0x05
         /* [ bytes ] */ ;
         UNPACK nat
         /* [ @unpacked option nat ] */ ;
         ASSERT_NONE ;
         UNIT
         /* [ unit ] */ ;
         NIL operation
         /* [ list operation : unit ] */ ;
         PAIR
         /* [ pair (list operation) unit ] */ } }
