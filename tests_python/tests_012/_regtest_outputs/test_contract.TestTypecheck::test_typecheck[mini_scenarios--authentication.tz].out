tests_012/test_contract.py::TestTypecheck::test_typecheck[mini_scenarios/authentication.tz]

Well typed
Gas remaining: 1039978.751 units remaining
{ parameter (pair (lambda unit (list operation)) signature) ;
  storage (pair (nat %counter) key) ;
  code { UNPPAIPAIR ;
         DUUUP
         /* [ nat : lambda unit (list operation) : signature : nat : key ] */ ;
         DUUP
         /* [ lambda unit (list operation) : nat : lambda unit (list operation)
            : signature : nat : key ] */ ;
         SELF
         /* [ @self contract (pair (lambda unit (list operation)) signature)
            : lambda unit (list operation) : nat : lambda unit (list operation)
            : signature : nat : key ] */ ;
         CHAIN_ID
         /* [ chain_id : @self contract (pair (lambda unit (list operation)) signature)
            : lambda unit (list operation) : nat : lambda unit (list operation)
            : signature : nat : key ] */ ;
         PPAIPAIR ;
         PACK
         /* [ @packed bytes : lambda unit (list operation) : signature : nat : key ] */ ;
         DIP { SWAP /* [ signature : lambda unit (list operation) : nat : key ] */ }
         /* [ @packed bytes : signature : lambda unit (list operation) : nat : key ] */ ;
         DUUUUUP
         /* [ key : @packed bytes : signature : lambda unit (list operation) : nat
            : key ] */ ;
         DIP { SWAP
               /* [ signature : @packed bytes : lambda unit (list operation) : nat : key ] */ }
         /* [ key : signature : @packed bytes : lambda unit (list operation) : nat
            : key ] */ ;
         DUUUP
         /* [ bytes : key : signature : @packed bytes : lambda unit (list operation)
            : nat : key ] */ ;
         DIP { CHECK_SIGNATURE /* [ bool : lambda unit (list operation) : nat : key ] */ }
         /* [ bytes : bool : lambda unit (list operation) : nat : key ] */ ;
         SWAP
         /* [ bool : bytes : lambda unit (list operation) : nat : key ] */ ;
         IF { DROP /* [ lambda unit (list operation) : nat : key ] */ } { FAILWITH /* [] */ } ;
         UNIT
         /* [ unit : lambda unit (list operation) : nat : key ] */ ;
         EXEC
         /* [ list operation : nat : key ] */ ;
         DIP { PUSH nat 1 /* [ nat : nat : key ] */ ; ADD /* [ nat : key ] */ }
         /* [ list operation : nat : key ] */ ;
         PAPAIR } }
